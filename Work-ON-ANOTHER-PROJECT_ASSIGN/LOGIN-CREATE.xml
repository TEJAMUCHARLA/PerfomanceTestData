<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config" id="7143d036-35a0-4c12-ad07-e1df26380116" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="LOGIN CREATE" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" zephyrTestName="" zephyrTestId="">
  <con:settings id="337fe865-f94a-4f69-9e3d-dddb1d9d35f8">
    <con:setting id="a4c8f7f8-56f1-4b52-b57e-87cd01f92604fileName">LOGIN-CREATE</con:setting>
    <con:setting id="7143d036-35a0-4c12-ad07-e1df26380116fileName">LOGIN-CREATE</con:setting>
  </con:settings>
  <con:testStep type="datasource" name="CreateAssignment" id="06d26d3a-db9a-4e50-a4be-8e74c25a9a87">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>CreateAssignment</worksheet>
          <cell>A143</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>points</con:property>
      <con:property>isGraded</con:property>
      <con:property>attemptType</con:property>
      <con:property>isHighlightLateSubmission</con:property>
      <con:property>isBroadcastingRequired</con:property>
      <con:property>accessibleFromTimezone</con:property>
      <con:property>timeZoneOffset</con:property>
      <con:property>isForEveryOne</con:property>
      <con:property>isImmediateAvailable</con:property>
      <con:property>isUnlocked</con:property>
      <con:property>NoOfAttempts</con:property>
      <con:property>Remarks</con:property>
      <con:property>resourse type</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Test Case Test Data" id="43266869-77ce-4093-a55d-77fcb484df3e">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat

def now= new Date()
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("MMMdd_HHmmss")
def currenTime= currentDatePlusOn.format(new Date(now.getTime()))
log.info("TIME NOW "+currenTime)
currenTime ="_"+currenTime

def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )

log.info("accessibleFromTimezone "+accessibleFromTimezone)

testRunner.testCase.testSuite.project.setPropertyValue("ProductISBN","9781975186708") 
testRunner.testCase.testSuite.project.setPropertyValue("CourseAssignmentCount","5") //Existimg resource types 9 , so 9*5+1 =54
testRunner.testCase.testSuite.project.setPropertyValue("TotalAssignments","10")//Assignment count for assertion
testRunner.testCase.testSuite.project.setPropertyValue("CreateCourseName","Performance Test Data Assignments "+currenTime.toString())
testRunner.testCase.testSuite.project.setPropertyValue("CreateCourseTimeZone",accessibleFromTimezone.toString())
testRunner.testCase.testSuite.project.setPropertyValue("CreateCourseDueTimeInDays","120") //course dute time 4 months form current time
testRunner.testCase.testSuite.project.setPropertyValue("CreateAssignmentDueTimeInDays","100")//assignmnet dute time 3 months fomr current time
testRunner.testCase.testSuite.project.setPropertyValue("CreateAssignmentDueTimeInMilliSeconds","14400000")
testRunner.testCase.testSuite.project.setPropertyValue("CreateAssignmentTimeZone",accessibleFromTimezone.toString())
testRunner.testCase.testSuite.project.setPropertyValue("CreateAssignmentTimeZoneOffset",timeZoneOffset.toString())

def instructorUser= ""
def instructorPassword= ""

//testRunner.testCase.testSuite.project.setPropertyValue("InstructorEmial",instructorUser.toString())
//testRunner.testCase.testSuite.project.setPropertyValue("instructorPassword",instructorPassword.toString())

log.info("SetUpDone")</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source Credetails" id="913444e3-75b6-4f3e-8bde-b27b2ac12471">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>PERF_Data_INST_Credentials_QE02</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>StudentUserEmail</con:property>
      <con:property>StudentPassword</con:property>
      <con:property>WitchSection</con:property>
      <con:startRow/>
      <con:endRow>49</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Set Credetails" id="f3085153-4184-4d11-9cdd-54630769c147">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;








def studentUserEmail = context.expand( '${Data Source Credetails#StudentUserEmail}' )
def studentPassword = context.expand( '${Data Source Credetails#StudentPassword}' )


//testRunner.testCase.testSuite.project.setPropertyValue("StudnetEmail", "AutomationStudent08")
//testRunner.testCase.testSuite.project.setPropertyValue("StudentPassword", "Welcome001")

testRunner.testCase.testSuite.project.setPropertyValue("StudnetEmail", studentUserEmail)
testRunner.testCase.testSuite.project.setPropertyValue("StudentPassword", studentPassword)


def witchSection = context.expand( '${Data Source Credetails#WitchSection}' )

def data = "\${#Project#Section"+witchSection.toString()+"Password}"


/*
if(witchSection.toString()=="1")
{
	def section1Password = context.expand( '${#Project#Section1Password}' )
}
else if(witchSection.toString()=="2")
{
	def section1Password = context.expand( '${#Project#Section1Password}' )
}
*/

def section1Password = context.expand( data )
log.info("password "+section1Password)
testRunner.testCase.testSuite.project.setPropertyValue("StudentJoinPassword", section1Password)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="GetAccessToken" id="d1f330f5-d254-4b04-9b62-f688f726906a">
    <con:settings/>
    <con:config service="Auth API" resourcePath="/Authentication/UsernameInSso" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="GetAccessToken" id="7a8b79ab-de89-4998-ba4f-b6708ff27d44" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://preprod-sso.hlrpbooks.com</con:endpoint>
        <con:request>{
  "Email": "${Data Source Credetails#StudentUserEmail}",
  "Password": "${Data Source Credetails#StudentPassword}",
  "PostbackUrlOnSuccess": "${#Project#PostbackUrlOnSuccess}",
  "SiteId": "${#Project#SystemId}",
  "StaySignIn": false,
    "UrlToRedirectOnSuccess": "${#Project#UrlToRedirectOnSuccess}",
  "Timestamp": "2022-10-04T05:23:53.382Z",
  "SourceUrl": "${#Project#SourceUrl}",
  "AccessCode": "",
  "SiteInfoType": "Education",
  "WorkflowId": ""
}</con:request>
        <con:originalUri>https://preprod-sso.hlrpbooks.com/Authentication/UsernameInSso</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1de409a2-83ad-4119-9963-7a2d299ce263" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="32a7ec59-9333-4c75-89de-3863fec4fa2c" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="7b97dea9-f6f0-473e-ae65-367e168d9ca7" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def response = context.expand( '${GetAccessToken#Response}' )


def verifyResponse = new JsonSlurper().parseText(response)
log.info(verifyResponse.Data.AuthenicationResult)

assert verifyResponse.Data.AuthenicationResult != null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Set Tokens" id="d96a0698-757d-4480-a582-be0a9b5d829c">
    <con:settings/>
    <con:config>
      <script><![CDATA[import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${GetAccessToken#Response}' )

def resp = new JsonSlurper().parseText(response)

def start = resp.Data.AuthenicationResult.indexOf("<AccessToken>")+13;
def end = resp.Data.AuthenicationResult.indexOf("</AccessToken>");
def xaccesstoken = resp.Data.AuthenicationResult.substring(start, end);

//result["xaccessTokenInstructor"]=xaccesstoken

def ssostart = resp.Data.AuthenicationResult.indexOf("<TokenKey>")+10;
def ssoend = resp.Data.AuthenicationResult.indexOf("</TokenKey>");
def ssotoken = resp.Data.AuthenicationResult.substring(ssostart, ssoend);
//result["ssoInstructor"]=ssotoken

def IDstart = resp.Data.AuthenicationResult.indexOf("<UserId>")+8;
def IDend = resp.Data.AuthenicationResult.indexOf("</UserId>");
def InstructorId = resp.Data.AuthenicationResult.substring(IDstart, IDend);
//result["instructorUserId"]=InstructorId
testRunner.testCase.setPropertyValue("instructorUserId", InstructorId)
testRunner.testCase.setPropertyValue("xaccessTokenInstructor", xaccesstoken)
testRunner.testCase.setPropertyValue("ssoInstructor", ssotoken)


log.info("instructorUserId = "+ InstructorId)
log.info("xaccessTokenInstructor =  " + xaccesstoken)
log.info("ssoInstructor = "+ssotoken)

 testRunner.testCase.testSuite.project.setPropertyValue("QCSSoToken", "")

 testRunner.testCase.testSuite.project.setPropertyValue("QCSSoToken", ssotoken.toString())]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Course Start and End Time" id="a56cd18f-d3c6-4264-9508-9adff49e8102">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat

def createCourseDueTimeInDays = context.expand( '${#Project#CreateCourseDueTimeInDays}' ) as int
def creteCourseTimeZone = context.expand( '${#Project#CreateCourseTimeZone}' )


log.info("creteCourseTimeZone "+creteCourseTimeZone)
SimpleDateFormat timer = new SimpleDateFormat("yyyy-MM-dd")
timer.setTimeZone(TimeZone.getTimeZone("UTC"));
def Currentday= timer.format(new Date())
context.setProperty("CurrentDate",Currentday)
Currentday =Currentday+"T00:00:00.000Z"
context.testCase.setPropertyValue('EffectiveDate',Currentday )

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
cal.add(Calendar.DATE, createCourseDueTimeInDays)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
currentDatePlusOn.setTimeZone(TimeZone.getTimeZone("UTC"));
def futuredate= currentDatePlusOn.format(currentDatePlusOne)
futuredate =futuredate+"T00:00:00.000Z"
context.testCase.setPropertyValue('ExpireDate', futuredate)

log.info Currentday + " : Currentdate"
log.info futuredate + " : Futuredate"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create course1" id="a1c32f1e-5201-4b3d-87f5-d13cd312b337">
    <con:settings/>
    <con:config service="Create course" methodName="Method 1" resourcePath="/api/ccm/v2/course" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create course1" id="b0f4feb9-49e2-4e5c-9708-387917dd39cc" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#TestCase#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request>{
  "name": "400_${#Project#CreateCourseName}",
  "number": "${#TestCase#CourseSerialNumber}",
  "sectionName": "Sec1",
  "programTypeId": "BSN",
  "startDate": "${#TestCase#EffectiveDate}",
  "endDate": "${#TestCase#ExpireDate}",
  "timeZoneId": "${#Project#CreateCourseTimeZone}",
  "academicTerm": "Summer",
  "academicYear": 2025,
  "sfdcAccountId":"001d0000029ZCmSAAW",
  "products": [
    "${#Project#ProductISBN}"
  ],
  "instructor": "${#TestCase#instructorUserId}",
  "role": "${#Project#InstuctorRoleValue}"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/ccm/v2/course</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1e33441-e5c8-4e08-9dde-2835210b5b15" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="44cfc69a-ed44-44b9-be23-7111ebc952ac" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="ecb68bb5-b91b-4300-bbc1-c8d013e74118" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
import groovy.*

def response = context.expand( '${Create course1#Response}' )
def testCase = messageExchange.modelItem.testCase;
def verifyResponse = new JsonSlurper().parseText(response)

assert verifyResponse.id != null
assert verifyResponse.sectionId != null
assert verifyResponse.enrollmentToken != null
assert verifyResponse.passcode != null
def harResponse = context.expand( '${Create course1#HarResponse#$[\'status\']}' )
def responseID = context.expand( '${Create course1#Response#$[\'id\']}' )
def rawRequestName = context.expand( '${Create course1#RawRequest#$[\'name\']}' )

if(harResponse.toString()=="200")
{
def courseSerialNumber = context.expand( '${#TestCase#CourseSerialNumber}' ) as int
	// context.expand( '${#TestSuite#CourseSerialNumber}' ) as int 
//testRunner.testCase.testSuite.setPropertyValue("CourseSerialNumber",(courseSerialNumber+1).toString())
//testCase.setPropertyValue("CourseSerialNumber",(courseSerialNumber+1).toString())
testCase.setPropertyValue("CourseName",rawRequestName.toString())
testCase.setPropertyValue("CourseId",responseID)
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create course2" id="86dc9f13-95d6-4bd6-b9bd-c639877a59f2">
    <con:settings/>
    <con:config service="Create course" methodName="Method 1" resourcePath="/api/ccm/v2/course" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create course2" id="b0f4feb9-49e2-4e5c-9708-387917dd39cc" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#TestCase#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request>{
  "name": "200_${#Project#CreateCourseName}",
  "number": "${#TestCase#CourseSerialNumber}",
  "sectionName": "Sec1",
  "programTypeId": "BSN",
  "startDate": "${#TestCase#EffectiveDate}",
  "endDate": "${#TestCase#ExpireDate}",
  "timeZoneId": "${#Project#CreateCourseTimeZone}",
  "academicTerm": "Summer",
  "academicYear": 2025,
  "sfdcAccountId":"001d0000029ZCmSAAW",
  "products": [
    "${#Project#ProductISBN}"
  ],
  "instructor": "${#TestCase#instructorUserId}",
  "role": "${#Project#InstuctorRoleValue}"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/ccm/v2/course</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1e33441-e5c8-4e08-9dde-2835210b5b15" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="44cfc69a-ed44-44b9-be23-7111ebc952ac" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="ecb68bb5-b91b-4300-bbc1-c8d013e74118" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
import groovy.*

def response = context.expand( '${Create course2#Response}' )
def testCase = messageExchange.modelItem.testCase;
def verifyResponse = new JsonSlurper().parseText(response)

assert verifyResponse.id != null
assert verifyResponse.sectionId != null
assert verifyResponse.enrollmentToken != null
assert verifyResponse.passcode != null
def harResponse = context.expand( '${Create course2#HarResponse#$[\'status\']}' )
def responseID = context.expand( '${Create course2#Response#$[\'id\']}' )
def rawRequestName = context.expand( '${Create course2#RawRequest#$[\'name\']}' )

if(harResponse.toString()=="200")
{
def courseSerialNumber = context.expand( '${#TestCase#CourseSerialNumber}' )
//testRunner.testCase.testSuite.setPropertyValue("CourseSerialNumber",(courseSerialNumber+1).toString())
//testCase.setPropertyValue("CourseSerialNumber2",(courseSerialNumber+1).toString())
testCase.setPropertyValue("CourseName2",rawRequestName.toString())
testCase.setPropertyValue("CourseId2",responseID)
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create course3" id="be9cdec3-0f54-4b15-b413-ee3c9357927d">
    <con:settings/>
    <con:config service="Create course" methodName="Method 1" resourcePath="/api/ccm/v2/course" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create course3" id="b0f4feb9-49e2-4e5c-9708-387917dd39cc" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#TestCase#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request>{
  "name": "100_${#Project#CreateCourseName}",
  "number": "${#TestCase#CourseSerialNumber}",
  "sectionName": "Sec1",
  "programTypeId": "BSN",
  "startDate": "${#TestCase#EffectiveDate}",
  "endDate": "${#TestCase#ExpireDate}",
  "timeZoneId": "${#Project#CreateCourseTimeZone}",
  "academicTerm": "Summer",
  "academicYear": 2025,
  "sfdcAccountId":"001d0000029ZCmSAAW",
  "products": [
    "${#Project#ProductISBN}"
  ],
  "instructor": "${#TestCase#instructorUserId}",
  "role": "${#Project#InstuctorRoleValue}"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/ccm/v2/course</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1e33441-e5c8-4e08-9dde-2835210b5b15" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="44cfc69a-ed44-44b9-be23-7111ebc952ac" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="ecb68bb5-b91b-4300-bbc1-c8d013e74118" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
import groovy.*

def response = context.expand( '${Create course3#Response}' )
def testCase = messageExchange.modelItem.testCase;
def verifyResponse = new JsonSlurper().parseText(response)

assert verifyResponse.id != null
assert verifyResponse.sectionId != null
assert verifyResponse.enrollmentToken != null
assert verifyResponse.passcode != null
def harResponse = context.expand( '${Create course3#HarResponse#$[\'status\']}' )
def responseID = context.expand( '${Create course3#Response#$[\'id\']}' )
def rawRequestName = context.expand( '${Create course3#RawRequest#$[\'name\']}' )

if(harResponse.toString()=="200")
{
def courseSerialNumber = context.expand( '${#TestCase#CourseSerialNumber}' ) as int
//testRunner.testCase.testSuite.setPropertyValue("CourseSerialNumber",(courseSerialNumber+1).toString())
//testCase.setPropertyValue("CourseSerialNumber3",(courseSerialNumber+1).toString())
testCase.setPropertyValue("CourseName3",rawRequestName.toString())
testCase.setPropertyValue("CourseId3",responseID)
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create course4" id="0f1bb0a5-e1c7-444a-839d-68ce92c7d7e1">
    <con:settings/>
    <con:config service="Create course" methodName="Method 1" resourcePath="/api/ccm/v2/course" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create course4" id="b0f4feb9-49e2-4e5c-9708-387917dd39cc" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#TestCase#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request>{
  "name": "500_${#Project#CreateCourseName}",
  "number": "${#TestCase#CourseSerialNumber}",
  "sectionName": "Sec1",
  "programTypeId": "BSN",
  "startDate": "${#TestCase#EffectiveDate}",
  "endDate": "${#TestCase#ExpireDate}",
  "timeZoneId": "${#Project#CreateCourseTimeZone}",
  "academicTerm": "Summer",
  "academicYear": 2025,
  "sfdcAccountId":"001d0000029ZCmSAAW",
  "products": [
    "${#Project#ProductISBN}"
  ],
  "instructor": "${#TestCase#instructorUserId}",
  "role": "${#Project#InstuctorRoleValue}"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/ccm/v2/course</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1e33441-e5c8-4e08-9dde-2835210b5b15" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="44cfc69a-ed44-44b9-be23-7111ebc952ac" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="ecb68bb5-b91b-4300-bbc1-c8d013e74118" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
import groovy.*

def response = context.expand( '${Create course4#Response}' )
def testCase = messageExchange.modelItem.testCase;
def verifyResponse = new JsonSlurper().parseText(response)

assert verifyResponse.id != null
assert verifyResponse.sectionId != null
assert verifyResponse.enrollmentToken != null
assert verifyResponse.passcode != null
def harResponse = context.expand( '${Create course4#HarResponse#$[\'status\']}' )
def responseID = context.expand( '${Create course4#Response#$[\'id\']}' )
def rawRequestName = context.expand( '${Create course4#RawRequest#$[\'name\']}' )

if(harResponse.toString()=="200")
{
def courseSerialNumber = context.expand( '${#TestCase#CourseSerialNumber}' ) as int
//testRunner.testCase.testSuite.setPropertyValue("CourseSerialNumber",(courseSerialNumber+1).toString())
testCase.setPropertyValue("CourseSerialNumber4",(courseSerialNumber+1).toString())
testCase.setPropertyValue("CourseName4",rawRequestName.toString())
testCase.setPropertyValue("CourseId4",responseID)
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Together CourseIDs and EnrrolmentToken" id="bc9af0a0-9f01-46d3-8eae-6ff65d40bbfc">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;
def finalData =""
for(int i =1;i&lt;=4;i++)
{
	   def data = "\${Create course"+i.toString()+"#Response}"
def response = context.expand( data)

	   log.info("response "+response)
	   finalData=finalData+response+","
}

finalData =finalData.substring(0,finalData.size()-1)
log.info("finalData "+finalData)

finalData = "["+finalData+"]"
log.info("finalData "+finalData)

//def resp = new JsonSlurper().parseText(finalData)
testRunner.testCase.setPropertyValue("CourseEnrollData", finalData.toString())</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasink" name="Set Tokens In Excel" id="802c9805-d8b5-4455-9ea2-f2e982990041">
    <con:settings/>
    <con:config xsi:type="con:DataSinkStep">
      <con:dataSink type="Excel">
        <con:configuration>
          <file/>
          <outfile>${#Project#TestDataExcelFile3}</outfile>
          <worksheet>InstructorsAccessTokens</worksheet>
          <cell>A2</cell>
          <evaluateFormulas>false</evaluateFormulas>
          <append>false</append>
        </con:configuration>
      </con:dataSink>
      <con:properties>
        <con:property>
          <con:name>Number</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>TokenValue</con:name>
          <con:value>${#TestCase#xaccessTokenInstructor}</con:value>
        </con:property>
        <con:property>
          <con:name>InstructorUserID</con:name>
          <con:value>${#TestCase#instructorUserId}</con:value>
        </con:property>
        <con:property>
          <con:name>CourseIDs</con:name>
          <con:value>${#TestCase#CourseEnrollData}</con:value>
        </con:property>
        <con:property>
          <con:name>SSOInStructor</con:name>
          <con:value>${#TestCase#ssoInstructor}</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop" id="326a9009-db71-4194-a6a6-73edb2a1b80e">
    <con:settings/>
    <con:config>
      <dataSourceStep>Data Source Credetails</dataSourceStep>
      <targetStep>Set Credetails</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>instructorUserId</con:name>
      <con:value>74fb0a3e-1db1-4dcb-b12f-450b00ae66d8</con:value>
    </con:property>
    <con:property>
      <con:name>xaccessTokenInstructor</con:name>
      <con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzc28ud2tocGUuY29tIiwiYXVkIjoiM2MzOTg0NmMtODg2YS1kZjExLWIxMTUtMDA1MDU2YzAwMDA4IiwiYXV0aF90aW1lIjoxNzAwNzUyNjYzLCJuYW1lIjoiUGVyZm9ybWFuY2UgaW5zdHJ1Y3RvcjEyMCIsImp0aSI6ImI1OGQ5Nzk5LTY2ZWYtNDg1NC1iYTE5LTFkYmM5MTI3MDZhNCIsImlhdCI6MTcwMDc1MjY2MywiZXhwIjoxNzAwODM5MDYzLCJzdWIiOiI3NGZiMGEzZS0xZGIxLTRkY2ItYjEyZi00NTBiMDBhZTY2ZDgiLCJyb2xlcyI6IndraHBlLWVuZCB1c2VyIiwid2tocGVfcGVybWlzc2lvbnMiOlsiQ2FuVXNlUGVyc29uYWxpemF0aW9uRmVhdHVyZXMiXSwid2tocGVfdG9rZW4iOiJvd29EcngxdjBhTXVuYXhGOVc0aEpUbjRPVFc1MmVpalEybU5Oak5RSEYxZE9PMGRVTXhCVEpQczJuK1hhcTZLNmxPUGNNdlAzR1J2M1ErbzU0Z1VpenQ1bzJUemZ6T3lwWVJUbUFJSE9NVkJZZ1Nta2pQU1VtNTkwRSsyL0psV0o1OWpwbmVreThXQWZoZU1KWGRxdVAwbHVFVUkzMkFWWGFxK0Q4Zk0zdjBhck1zckFyM2cvSzkwYmxhd0wyQ29HeWc0eFhZVEtqcnlzeWtBWkp0c1ljUDhjdnRVb3Rud1J0akwvWmF1Y3ZZYktEakZkaE1xT3ZLektRQmttMnhoNnhkZUtlY3dwUzNvVklOdElWSUZiUTlHNE5uVkxyQ0lhcnVaZnlPL1lOYz0iLCJ0b2tlbl90eXBlIjoiYmVhcmVyIn0.hN7kpsW7DP-eU0n8dUU3y76EF15DTnirQpsKXX9ZY6tdlCZ3MRgRdKRzvmYFG6EVCJhrrRnGglVlt02zVNxl__XdyXOUV51ScU1VM5v9eUYqSw8kq_EFPHNQeciYl3ihiTqPkRM-a4TjF_8tE3fCVncFHVjtsCiJs8j6k78vnEE</con:value>
    </con:property>
    <con:property>
      <con:name>ssoInstructor</con:name>
      <con:value>owoDrx1v0aMunaxF9W4hJTn4OTW52eijQ2mNNjNQHF1dOO0dUMxBTJPs2n+Xaq6K6lOPcMvP3GRv3Q+o54gUizt5o2TzfzOypYRTmAIHOMVBYgSmkjPSUm590E+2/JlWJ59jpneky8WAfheMJXdquP0luEUI32AVXaq+D8fM3v0arMsrAr3g/K90blawL2CoGyg4xXYTKjrysykAZJtsYcP8cvtUotnwRtjL/ZaucvYbKDjFdhMqOvKzKQBkm2xh6xdeKecwpS3oVINtIVIFbQ9G4NnVLrCIaruZfyO/YNc=</con:value>
    </con:property>
    <con:property>
      <con:name>EffectiveDate</con:name>
      <con:value>2023-11-23T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>ExpireDate</con:name>
      <con:value>2024-03-22T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>CourseSerialNumber</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:property>
      <con:name>CourseName</con:name>
      <con:value>400_Performance Test Data Assignments _Nov23_204659</con:value>
    </con:property>
    <con:property>
      <con:name>CourseId</con:name>
      <con:value>g114UL82ZV7S</con:value>
    </con:property>
    <con:property>
      <con:name>CourseSerialNumber2</con:name>
      <con:value>21111111</con:value>
    </con:property>
    <con:property>
      <con:name>CourseName2</con:name>
      <con:value>200_Performance Test Data Assignments _Nov23_204659</con:value>
    </con:property>
    <con:property>
      <con:name>CourseId2</con:name>
      <con:value>g114UL8DYIDWN</con:value>
    </con:property>
    <con:property>
      <con:name>CourseSerialNumber3</con:name>
      <con:value>2111113</con:value>
    </con:property>
    <con:property>
      <con:name>CourseName3</con:name>
      <con:value>100_Performance Test Data Assignments _Nov23_204659</con:value>
    </con:property>
    <con:property>
      <con:name>CourseId3</con:name>
      <con:value>g114UL8PC1RD4</con:value>
    </con:property>
    <con:property>
      <con:name>CourseSerialNumber4</con:name>
      <con:value>2</con:value>
    </con:property>
    <con:property>
      <con:name>CourseName4</con:name>
      <con:value>500_Performance Test Data Assignments _Nov23_204659</con:value>
    </con:property>
    <con:property>
      <con:name>CourseId4</con:name>
      <con:value>g114UL9PL3AF</con:value>
    </con:property>
    <con:property>
      <con:name>CourseEnrollData</con:name>
      <con:value>[{"id":"g114UL82ZV7S","sectionId":"g114UL82ZV7S_s114UL82119S8","enrollmentToken":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDA5MjU0NjMsImp0aSI6IjIzNjVhY2QyLTA1MDItNDhiOC05MjNlLTc5ZmEwNWIyNTJmOSIsImlhdCI6MTcwMDc1MjY2MywiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNzAwNzUyNjYzLCJzdWIiOiI3NGZiMGEzZS0xZGIxLTRkY2ItYjEyZi00NTBiMDBhZTY2ZDgiLCJobHJwX2NjbSI6W3siciI6ImkiLCJjcnMiOiJnMTE0VUw4MlpWN1MifV19.cvDU-TH2yVuHI7GWe56GGZ_FpbUCdLFyTklR4lH6JriUtnPnoFth9RMx5MBTDMY_-CBWKHbd5wHpiiyva-a-zHytXkWZ0DQlTZQyAQ8M71j8NsnV2uPGHrhYiRAZSMBeWMH7FSoW2xNcUWW73WqbEDgQFZoISOkg71dapwIt6nNtzBxx9JpmW8PD7ow4riCy-Zs1D_r0mWrlIhHt7pnugeN7dHf6yioFEbMlejMOccUBSgDS2YD6wGNUk-7ECi4hds1d1p84L8rw2taY23RCmwSaXL6l9nHzWiUvgumE8T6_-KYe3xrnzcceXq_bykrcQcu7PYlLRmojwka_e9MT_fhK53JQmjkI9lI6aPGIgoN4qXlLHpxIor7OtEJB2RAFG0NJekSbHvvbr_zDun4pCPHvCvHe6mTROFI62kkh-fNRTIR0M2bwmLbv2iyopBoZSwmHJrE_0Qiqq_Ulhbh2Svduaic3-ArKvXZSqE47h7RwLiDgQgj0AR38o-RdkTOGkjHJ_BtqwTlBsNLfBwO1SvUDgle8x2ng3rKXao5VRG0fHbGBHoGXxJg44bVcEhyxTr4oS0fBcOV9ScSs-1_GER9LQeHG2EsaHIkLUcP9fMBoe0M8U-bTLwGYI8VMHUw-U2KyE4YU3fmp_f04wnR0SW_poy7J6tafs47Gg2xHyA4","passcode":"114UL82119S8"},{"id":"g114UL8DYIDWN","sectionId":"g114UL8DYIDWN_s114UL8DYJSH3","enrollmentToken":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDA5MjU0NjQsImp0aSI6IjVlMmNiNGQzLTBkYTctNGU5NC1iZjE4LTViMmM0YThhMjhhMyIsImlhdCI6MTcwMDc1MjY2NCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNzAwNzUyNjY0LCJzdWIiOiI3NGZiMGEzZS0xZGIxLTRkY2ItYjEyZi00NTBiMDBhZTY2ZDgiLCJobHJwX2NjbSI6W3siciI6ImkiLCJjcnMiOiJnMTE0VUw4RFlJRFdOIn1dfQ.JHRJWv2LbFJOlJnp2mT3ql5UgPSuYvxRoUXi6ynwg65LARavOQJXNZnS6CNpsJ04IyWBiEta-JNh-DMLYRKGTzPliwsYitqHiWUuqdm6U5pFdbK0gGtDDERJrOZQ2b8liuHq4l7klbNM9LWjnKenR34MUeEUt4DpBXrjayKk9CWHL0P7mSHywAxFKWxCeQC7oF98ONzs5rnJQRHBgziUDUCj9H-DPNcwowjD_nDtXP5n7VtvX3mCI-OBV1_CDC8fDqEI5IIwdcVTptSpL1finXavf3eZIT3k9SABxYe_4nMhYVXNL4OcxgwJ1LZxszdLUpQw1Zwi9A5uf6TWK_jLvAIarx4_4PCNTYgWS36I0ViJeL5zcvQwm7b_jXNHEHpOs6XA1TSYKcjV2EumKQcXfaxhx73_WMlXM8TUNfw9T_DtVookJSTwT8gOHASKwtgAw1XvkKBBJsKHtGFtDRwPez9e3ERzMNHpT3vRxaCcMUFJu_mgVi83KR0k7l45ulEZDNh0kJhg0sHvcEmLCO7dZcZzmGgWEPZ-3fyg0QQ0PEeRX_JqFcpLnVVDh4iR6P8bRdNiyqe6RZQtXOHc80WBWngnU0eczUN95aFxvD8l20aVHDcEU_gVjFHQ55uuaAdNWolzQgpCUOYExz_XiA6ZmIxGYNmle_CCrq2SZIDEMis","passcode":"114UL8DYJSH3"},{"id":"g114UL8PC1RD4","sectionId":"g114UL8PC1RD4_s114UL8PC35XK","enrollmentToken":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDA5MjU0NjQsImp0aSI6ImMxNzFiNDBlLTVmZTgtNDU4OC04YmU0LWU4N2UzYzIzYzlhYyIsImlhdCI6MTcwMDc1MjY2NCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNzAwNzUyNjY0LCJzdWIiOiI3NGZiMGEzZS0xZGIxLTRkY2ItYjEyZi00NTBiMDBhZTY2ZDgiLCJobHJwX2NjbSI6W3siciI6ImkiLCJjcnMiOiJnMTE0VUw4UEMxUkQ0In1dfQ.Oc_SrRUvbI57vNydb33Fr955lxX7yPrLYL2WJwEqyXAOtz6E6XqVY2qicfmGcfmnnXyqhcUTEd3oPs6mZcKwhcPVYReBgHCMT9f8kbBVnRz9ng3XLzw0-bFGbHTyX4UwiaygRXjFylIcFICCrN2-MYA7fxxEHmrG35wfdK2djs1mX3UfS41PSvL9nUcTCTeiA4pYAN0AL7T4RaQs5xuJEnm6owGo9Lk-QHaQj2cJlgBO6k29Am5CicBrhl_b9Ky4jZnrXfI3aliiZmbY0g1BO5SMgrmisX2Kt3rpHxAbAWT6RX5NbKDJ-Q39eH3yVJlnB7vF1UR33kqLGV7WapcTBuzD2MeP0D0Nw8SpyuJOe-t2sWwOovskdgXY3hZJDHN9xV7Pq8vgVIR5FEwI3yBZKlluT51B575dOE6x3W8Rwx7tb0hdiUxl2Jeks7OveNI7HwFmZjMHgKi5hjPRgXCbQQcGE4M5OrOiO_LgEfQw5v_KVKze3opZZtcdPGTsWT0sZz3uF22VoYwFxguQeLSHipVGN9ZBGwCCSZ_Xkjq_vMcgy5mR5nl89YwRBl2hnsZ7xq4SHhk87qK5wjuNIkrR22vDv-kAdFbifLAThUMtcOrSHJDVgPRApOwJmdsz42w3_rV2W24jpcpQy2oKMO8yChrxATMYNzsqXAXmqAYSFuI","passcode":"114UL8PC35XK"},{"id":"g114UL9PL3AF","sectionId":"g114UL9PL3AF_s114UL9PMHUV","enrollmentToken":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDA5MjU0NjUsImp0aSI6IjQ2MjhmY2NkLTA1MWMtNDcxMC1iZWFiLTU4ZDA4ZGFkNzhlYSIsImlhdCI6MTcwMDc1MjY2NSwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNzAwNzUyNjY1LCJzdWIiOiI3NGZiMGEzZS0xZGIxLTRkY2ItYjEyZi00NTBiMDBhZTY2ZDgiLCJobHJwX2NjbSI6W3siciI6ImkiLCJjcnMiOiJnMTE0VUw5UEwzQUYifV19.U56wDw4kqyF8dF3G5ShxVy5NVJLRwKXrk0gjOarbuYgfwvTlSkBbpWeax0z53HTiP1LBEGjCB4ZC7h-KIpT-Q5QYHp4vVp0Hrp-6nT8qo40uqONFP3ax7WtcOa0P_50O0JZPzAtStGFnmFDqGa213mtKwcPJKepq5PrL9NcUawxEagRTMZVk_TtUPnnoLsdDvEXokvXKLn7OxvTb2P7NRhBbiqAeTtpeZgcjKZP3x4w87W8-Pg1Z9I5BnV7KFMDGxo2evJc1ZsatWkCjRFvcDuPYONKUNSD9a8EL1DD0VQXI3V1u0eAFlo3-EnKHZJ5GODk0BZMZirLYf4bsR1ORdADT5qZDnqPgD6ct0RiZfLN14mP4wXiVkLEMx6dHfMTWM9rEfI8KtOX1j_f5L5HT9FG6pLIoXGruMQKf83FlIMreOYfy3gyeOYLQCIZZGmDhDHro3xvNmJ1lGDl-M0vGdBOUrKfZrdXA5iaWNs2sQOJLo0BhVpzfEOwFlDuk4JvSYfhGoyFG7V-01V3URzAoBYgf5VcYaZza41jKre5bN0ZiOaiII32FmG6DW05wy6pY8x7Q0IfAMrFs3f2VprBL_f0O3UDdVyREcbb-W-RiDlfI61DP3tgCQvHqMfVgWuuhwtBlFDrGkojzzVms2J-9H4eve2PS3fhRTTMJpGzQ0BQ","passcode":"114UL9PMHUV"}]</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
