<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" id="7bf3f954-408c-4f34-9ccc-f0f005f3bb9d" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Create CPE DB Data" searchProperties="true" timeout="0">
  <con:settings id="e5a3b8be-9dde-4848-b8c4-9566eb4f5e49">
    <con:setting id="GeneratableJUnitReport@Folder">D:\Ready APi Daily Data\March30\Issue</con:setting>
    <con:setting id="7bf3f954-408c-4f34-9ccc-f0f005f3bb9dfileName">Create-CPE-DB-Data</con:setting>
  </con:settings>
  <con:testStep type="calltestcase" name="Run Assign Single Resource Type CPE Assignments" id="1dea7aef-760a-444b-b553-20413320c65f">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:RunTestCaseStep" copyHttpSession="true" copyLoadTestProperties="true" ignoreEmptyProperties="true">
      <con:targetTestCase>2b24812c-5789-4c7f-be73-d6534e814e6c</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>accessDate</con:name>
          <con:value>2023-05-08T08:56:20+05:30</con:value>
        </con:property>
        <con:property>
          <con:name>DueDate</con:name>
          <con:value>2023-05-09</con:value>
        </con:property>
        <con:property>
          <con:name>EffectiveDate</con:name>
          <con:value>2023-04-18T00:00:00.000Z</con:value>
        </con:property>
        <con:property>
          <con:name>ExpireDate</con:name>
          <con:value>2023-05-18T00:00:00.000Z</con:value>
        </con:property>
        <con:property>
          <con:name>tomorrow</con:name>
          <con:value>Tue, Apr 18 2023</con:value>
        </con:property>
        <con:property>
          <con:name>tomorrow2</con:name>
          <con:value>2023-04-18</con:value>
        </con:property>
        <con:property>
          <con:name>instructorUserId</con:name>
          <con:value>0345b785-ba3e-4b3a-9c6c-447101694d75</con:value>
        </con:property>
        <con:property>
          <con:name>numberOfAttempts</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>StudentenrollmentToken</con:name>
          <con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE4ODU5NjAsImp0aSI6IjAxZDNiYzFlLWJlMzMtNGNjOS04OGU3LWI4ZTcxMjMzNTNhNSIsImlhdCI6MTY4MTcxMzE2MCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNjgxNzEzMTYwLCJzdWIiOiI5ZTZlOGM1Ny02ODNlLTRjNTQtODkzMS00NDc0MDE1OWQ2ODUiLCJobHJwX2NjbSI6W3siciI6InMiLCJjcnMiOiJnU0VCUUJLRzk5SUIiLCJzZWMiOiJnU0VCUUJLRzk5SUJfc1NFQlFCS0dBMlIifV19.kKMRJHB4y0Tno_H-esNrWhe-RsUn8zHCmazkZhhKCgXyBFbLRWiD2zyGp5MOZCZbIW1WIlQg4CjosIPwQtw204mHb6iNohaZtznNKEaZ5_BbW3241Stf9E_xo2X9qBCl_zrYUpX1M4uR066aPvoD5d_hViNCAynUW7OXzK3nC4VgF9F6amwQSDrje6AeD8D8vLTw_kmFk9eGSkVvEWnd5ZssYCAzqyVdgadLGbFrWj2N3TOIPsEkgR3HoJ17Ipg_ZCAwBqrAiPG5WMqQsNbMexKeSeb2bMA5FQuasV9Qc3YK9aphsr4ER17HAAZ1F1GtO_gmaYBO8xKU11WX1_UDGx5Dt0cpeRM24oonRf4sGS-BIsWXCsG8fTyaYzfJajIv7xh-ibK5NYtp2fji4W1l9ErKyfMX8bh27B5TnSOPjKZQydo4bqRnpK6IeiSCKmhbi195Yzzzns9h3Zs0edCV70UnEnFPO23gHIM2tSjkk_HNUitc8rR3ErYXKQx_p3t4RyAYcP8dbqi0RdepDBYoyR8LtFpfF63PYKKSk9SD5ePpqcqyqfHDibuL_Onmn0q14sF5TkXmnFLrj15Bxx4dgJV6BwTwbc3n_I-y5unOB6nbSR2PwINbsueSx7hjmebMPzZJqUwCGeehUnvGvt5vMbMY1ofYglw1HxryhcCvgdo</con:value>
        </con:property>
        <con:property>
          <con:name>accessTime</con:name>
          <con:value>08:56 PM</con:value>
        </con:property>
        <con:property>
          <con:name>DueTime</con:name>
          <con:value>12:56 AM</con:value>
        </con:property>
        <con:property>
          <con:name>AssignedAssignmnetCount</con:name>
          <con:value>4</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>accessDate</con:entry>
        <con:entry>DueDate</con:entry>
        <con:entry>EffectiveDate</con:entry>
        <con:entry>ExpireDate</con:entry>
        <con:entry>tomorrow</con:entry>
        <con:entry>tomorrow2</con:entry>
        <con:entry>instructorUserId</con:entry>
        <con:entry>numberOfAttempts</con:entry>
        <con:entry>StudentenrollmentToken</con:entry>
        <con:entry>accessTime</con:entry>
        <con:entry>DueTime</con:entry>
        <con:entry>AssignedAssignmnetCount</con:entry>
      </con:returnProperties>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Get product details" id="c3a7e97b-e839-42da-aeca-f2f1e5cfa6f4">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Get Asset list from the product" methodName="Method 1" resourcePath="/api/product-title-management/v1/product/isbn/{ISBN}/published" xsi:type="con:RestRequestStep">
      <con:restRequest name="Get product details" id="3092eba6-1dea-46cf-ac60-b85c338a71e8" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestSuite#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/product-title-management/v1/product/isbn/9781975123345/published</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="148ea42d-70a5-4c6f-b768-fe332d2a9088" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="d8992cfb-bb2d-41a8-952a-e8465daa3301" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="ISBN" value="9781975186777"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="CreateAssignment" id="c64560d5-718c-4902-90de-5f369d465054">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>CreateAssignment</worksheet>
          <cell>A84</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>points</con:property>
      <con:property>isAssigned</con:property>
      <con:property>isGraded</con:property>
      <con:property>attemptType</con:property>
      <con:property>submissionCount</con:property>
      <con:property>accessibleFromTimezone</con:property>
      <con:property>timeZoneOffset</con:property>
      <con:property>isForEveryOne</con:property>
      <con:property>isImmediateAvailable</con:property>
      <con:property>isUnlocked</con:property>
      <con:property>maxAttempts</con:property>
      <con:property>isCoded</con:property>
      <con:property>isHighlightLateSubmission</con:property>
      <con:property>isBroadcastingRequired</con:property>
      <con:property>showActivitiesCheckBox</con:property>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Start and End Time" id="bae8cd42-9d8c-4150-a350-44f01f5dccd1">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )

isImmediateAvailable=true
def createAssignmentTimeZone = context.expand( '${#Project#CreateAssignmentTimeZone}' )
accessibleFromTimezone =createAssignmentTimeZone
def createAssignmentTimeZoneOffset = context.expand( '${#Project#CreateAssignmentTimeZoneOffset}' )
timeZoneOffset=createAssignmentTimeZoneOffset


log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def assignmnetDueTime_MS =context.expand( '${#Project#CreateAssignmentDueTimeInMilliSeconds}' ) as int
log.info(assignmnetDueTime_MS)
def createAssignmentDueTimeInDays = context.expand( '${#Project#CreateAssignmentDueTimeInDays}' ) as int
log.info("createAssignmentDueTimeInDays  "+createAssignmentDueTimeInDays)
//def createAssignmentDueTimeInMilliSeconds = context.expand( '${#Project#CreateAssignmentDueTimeInMilliSeconds}' )


def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
cal.add(Calendar.DATE, createAssignmentDueTimeInDays)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
def DueDateData
def DueTimeData
if(createAssignmentDueTimeInDays==0)
{
	 DueDateData= currentDatePlusOn.format(new Date(now.getTime()+assignmnetDueTime_MS))
 DueTimeData= duteTimePlus.format(new Date(now.getTime()+assignmnetDueTime_MS))
}else
{
DueDateData= currentDatePlusOn.format(currentDatePlusOne)
 DueTimeData= duteTimePlus.format(new Date(now.getTime()+assignmnetDueTime_MS))
}


if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+8000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+8000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Enter Child Assignment Details Video" id="7bdddaa4-2d88-4bcd-a47b-0f4f188ff2be">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Enter Child Assignment Details Video" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
	 "points": 0,
	 "attemptType": "Completion",
      "assignmentType": 
      {
        "type": "VIDEOS"
      },
      "isAssigned": ${CreateAssignment#isAssigned},
      "isGraded": ${CreateAssignment#isGraded},
      "submissionCount": ${CreateAssignment#submissionCount},
      "sections": [
        {
          "sectionCode": [
            "*"
          ],
          "dueDate": "${#TestCase#DueDate}",
          "dueDateTime": "${#TestCase#DueTime}",
          "dueDateTimezone": "${#Project#CreateAssignmentTimeZone}",
          "accessibleFrom": "${#TestCase#accessDate}",
          "accessibleFromTimezone": "${#Project#CreateAssignmentTimeZone}",
          "isForEveryOne": true,
          "isImmediateAvailable":${CreateAssignment#isImmediateAvailable} ,
          "isUnlocked": ${CreateAssignment#isUnlocked}
        }
      ],</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>401</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Arrange Video Batch Child Assests" id="74e68848-279d-4cca-bfcc-d6f0ffd3df77">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import com.eviware.soapui.model.testsuite.TestRunner.Status
 import  groovy.json.JsonOutput
 import  groovy.json.*

class AssignmentBody 
{
    def resourceTypeName
    def name
    def resourceTypeId
    def assetType
    def assetCode
    def assetVersion
    def assetId
  
}
 def value = testRunner.testCase.testSteps["Get product details"].testRequest.response
//def value = testRunner.testCase.testSteps["Get Product Assignment Details"].testRequest.response
def responseValue = value.responseContent

//def resourceTypeLabel = context.expand( '${#TestSuite#ResourceTypeLabel}' )
//testRunner.testCase.testSuite.setPropertyValue( "resourceTypeLabel", resourceTypeLabel.toString())
def resourceTypeLabel ="Videos"

// log.info(resourceTypeLabel.toString())

def slurper = new JsonSlurper()

def json = slurper.parseText(responseValue)

def allconatins=json.containers

def assignmentNames=[]
def assignmentPublishedVersion=[]
def assignmentExternalAssetId=[]
def AllBatchAsignmnetData

AllBatchAsignmnetData=""//"\"assignments\": ["

def rawRequest1234 = context.expand( '${Enter Child Assignment Details Video#RawRequest}' )
def objectAllData
String assetCollectionCode=""
String lableName=""
int i =0;
//def childCutoff = context.expand( '${#TestCase#ChildCutoff}' )

int ChildAssertCutOff= 3//childCutoff as int 
int assertNumber=0
int assignmentNumber=3
for(def eachcontainer in allconatins )
{

	if(!(eachcontainer==null))
	{
         def allAresrts=  eachcontainer.assets
      
	       for(def eachallAsserts in allAresrts )
                {	
                      if(eachallAsserts.resourceTypeLabel.toString().equals(resourceTypeLabel))
                     {   assertNumber++
                     if(assertNumber==assignmentNumber)
                     {
                     log.info(eachallAsserts.name.toString())  
                   	 lableName=eachallAsserts.label
            	 	  assetCollectionCode=eachallAsserts.assetCollectionCode
                     def childallAsserts=eachallAsserts.assets         	
               		for(def eachchildallAsserts in childallAsserts )
                            {
                            	if(!(eachchildallAsserts==null))
                                {	
                                	if(i&lt;ChildAssertCutOff)
                                	{i++;
                                	//log.info(eachchildallAsserts)
                                	AssignmentBody dataObject = new AssignmentBody
                                    (
                                resourceTypeName:resourceTypeLabel.toString(),
                	            name :eachallAsserts.label+" : "+eachchildallAsserts.assetLabel.toString(),
                	            resourceTypeId :eachchildallAsserts.resourceTypeId.toString(),
                	            assetType :eachchildallAsserts.assetType.toString(),
                	            assetCode :eachchildallAsserts.assetCode.toString(),
                	           assetVersion :eachchildallAsserts.publishedVersion.toString(),
                	           assetId : eachchildallAsserts.externalAssetId.toString(),
   
                                     ) 
                                  def dataObjectValue =JsonOutput.toJson(dataObject)
                                  String scripitdata=dataObjectValue.toString().substring(1)
                                   def childdAssert= rawRequest1234.toString()+scripitdata
                	                AllBatchAsignmnetData =AllBatchAsignmnetData+childdAssert.toString()+","  
                                   }

                                    }
                                }  
                         break
                     }	   
                     }
                
	             }

	}
}

AllBatchAsignmnetData=AllBatchAsignmnetData.toString().substring(0,AllBatchAsignmnetData.toString().size()-1)
//AllBatchAsignmnetData=AllBatchAsignmnetData+"]"
log.info("final out put "+AllBatchAsignmnetData.toString())
 testRunner.testCase.setPropertyValue( "AllBatchAsignmnetData", AllBatchAsignmnetData.toString())
 testRunner.testCase.setPropertyValue( "batchAssignmentName", lableName.toString())
 testRunner.testCase.setPropertyValue( "skillId", assetCollectionCode.toString())
  testRunner.testCase.setPropertyValue( "ChildAssertsCount", i.toString())
testRunner.testCase.setPropertyValue( "ChildAssertIndexCount", (i-1).toString())

log.info( "lableName  =="+ lableName.toString())
log.info( "assetCollectionCode =="+ assetCollectionCode.toString())
log.info("Child Asserts = "+i)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create Assignment Video batch" id="0474d408-f52b-4c46-9b2b-f5802c6286e1">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create Assignment Video batch" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken} " xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
  "batchAssignmentName": "${#TestCase#batchAssignmentName}",
  "productIsbn": "9781975186777",
  "productId": "9781975186777",
  "courseId": "${#TestSuite#CourseId}",
  "assignments": [${#TestCase#AllBatchAsignmnetData}],
  "consumer": "CPE",
  "isCoded": ${CreateAssignment#isCoded},
  "commonSettings": {
    "timeZone": "${#Project#CreateAssignmentTimeZone}",
    "attemptLimit": ${CreateAssignment#maxAttempts},
    "isHighlightLateSubmission": ${CreateAssignment#isHighlightLateSubmission},
    "isBroadcastingRequired": ${CreateAssignment#isBroadcastingRequired}
  },
  "additionalDetails": {
    "skillId": "${#TestCase#skillId}",
    "assetCollectionName": "${#TestCase#batchAssignmentName}",
    "showActivityCheckBox": [
      {
         "sectionCode": [
          "*"
        ],
        "showActivitiesCheckBox": ${CreateAssignment#showActivitiesCheckBox}
      }
    ],
    "resourceTypeId": "5"
  },
  "metaInformation": {
    "isCoded": ${CreateAssignment#isCoded}
  }
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="b5686779-9fb6-4646-98bc-284a43e4d2ee" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${Create Assignment#Response}' )

def childAssertsCount = context.expand( '${#TestCase#ChildAssertsCount}' )

def verifyResponse = new JsonSlurper().parseText(response)
assert verifyResponse.batchId != null
assert verifyResponse.assignmentUUID!= null
//log.info(verifyResponse.assignmentUUID.size())
assert verifyResponse.assignmentUUID.size() ==childAssertsCount as int</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Enter Child Assignment Details H and B Batch" id="e7e5b781-ce40-463a-8358-5d28e7c08f09">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Enter Child Assignment Details H and B Batch" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create Course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
	 "points": ${CreateAssignment#points},
	 "attemptType": "${CreateAssignment#attemptType}",
      "assignmentType": 
      {
        "type": "HEART_AND_BREATH"
      },
      "isAssigned": ${CreateAssignment#isAssigned},
      "isGraded": ${CreateAssignment#isGraded},
      "submissionCount": ${CreateAssignment#submissionCount},
      "sections": [
        {
          "sectionCode": [
          "*"
          ],
          "dueDate": "${#TestCase#DueDate}",
          "dueDateTime": "${#TestCase#DueTime}",
          "dueDateTimezone": "${#Project#CreateAssignmentTimeZone}",
          "accessibleFrom": "${#TestCase#accessDate}",
          "accessibleFromTimezone": "${#Project#CreateAssignmentTimeZone}",
          "isForEveryOne": true,
          "isImmediateAvailable":${CreateAssignment#isImmediateAvailable} ,
          "isUnlocked": ${CreateAssignment#isUnlocked}
        }
      ],</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>401</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Arrange Heart And Breath Sounds Child Assests" id="ef596fae-a503-4e6b-bccb-b1cde85fecfc">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import com.eviware.soapui.model.testsuite.TestRunner.Status
 import  groovy.json.JsonOutput
 import  groovy.json.*

class AssignmentBody 
{
    def resourceTypeName
    def name
    def resourceTypeId
    def assetType
    def assetCode
    def assetVersion
    def assetId
  
}
 def value = testRunner.testCase.testSteps["Get product details"].testRequest.response
//def value = testRunner.testCase.testSteps["Get Product Assignment Details"].testRequest.response
def responseValue = value.responseContent

//def resourceTypeLabel = context.expand( '${#TestSuite#ResourceTypeLabel}' )
//testRunner.testCase.testSuite.setPropertyValue( "resourceTypeLabel", resourceTypeLabel.toString())

def resourceTypeLabel = "Heart and Breath Sounds"
// log.info(resourceTypeLabel.toString())

def slurper = new JsonSlurper()

def json = slurper.parseText(responseValue)

def allconatins=json.containers

def assignmentNames=[]
def assignmentPublishedVersion=[]
def assignmentExternalAssetId=[]
def AllBatchAsignmnetData

AllBatchAsignmnetData=""//"\"assignments\": ["

def rawRequest1234 = context.expand( '${Enter Child Assignment Details H and B Batch#RawRequest}' )
def objectAllData
String assetCollectionCode=""
String lableName=""
int i =0;
def childCutoff = context.expand( '${#TestCase#ChildCutoff}' )

int ChildAssertCutOff= 3//childCutoff as int 
int assertNumber=0
int assignmentNumber=1
for(def eachcontainer in allconatins )
{

	if(!(eachcontainer==null))
	{
         def allAresrts=  eachcontainer.assets
      
	       for(def eachallAsserts in allAresrts )
                {	
                      if(eachallAsserts.resourceTypeLabel.toString().equals(resourceTypeLabel))
                     {   assertNumber++
                     if(assertNumber==assignmentNumber)
                     {
                     log.info(eachallAsserts.name.toString())  
                   	 lableName=eachallAsserts.label
            	 	  assetCollectionCode=eachallAsserts.assetCollectionCode
                     def childallAsserts=eachallAsserts.assets         	
               		for(def eachchildallAsserts in childallAsserts )
                            {
                            	if(!(eachchildallAsserts==null))
                                {	
                                	if(i&lt;ChildAssertCutOff)
                                	{i++;
                                	//log.info(eachchildallAsserts)
                                	AssignmentBody dataObject = new AssignmentBody
                                    (
                                resourceTypeName:resourceTypeLabel.toString(),
                	            name :eachallAsserts.label+" : "+eachchildallAsserts.assetLabel.toString(),
                	            resourceTypeId :eachchildallAsserts.resourceTypeId.toString(),
                	            assetType :eachchildallAsserts.assetType.toString(),
                	            assetCode :eachchildallAsserts.assetCode.toString(),
                	           assetVersion :eachchildallAsserts.publishedVersion.toString(),
                	           assetId : eachchildallAsserts.externalAssetId.toString(),
   
                                     ) 
                                  def dataObjectValue =JsonOutput.toJson(dataObject)
                                  String scripitdata=dataObjectValue.toString().substring(1)
                                   def childdAssert= rawRequest1234.toString()+scripitdata
                	                AllBatchAsignmnetData =AllBatchAsignmnetData+childdAssert.toString()+","  
                                   }

                                    }
                                }  
                         break
                     }	   
                     }
                
	             }

	}
}

AllBatchAsignmnetData=AllBatchAsignmnetData.toString().substring(0,AllBatchAsignmnetData.toString().size()-1)
//AllBatchAsignmnetData=AllBatchAsignmnetData+"]"
log.info("final out put "+AllBatchAsignmnetData.toString())
 testRunner.testCase.setPropertyValue( "AllBatchAsignmnetData", AllBatchAsignmnetData.toString())
 testRunner.testCase.setPropertyValue( "batchAssignmentName", lableName.toString())
 testRunner.testCase.setPropertyValue( "skillId", assetCollectionCode.toString())
  testRunner.testCase.setPropertyValue( "ChildAssertsCount", i.toString())
testRunner.testCase.setPropertyValue( "ChildAssertIndexCount", (i-1).toString())

log.info( "lableName  =="+ lableName.toString())
log.info( "assetCollectionCode =="+ assetCollectionCode.toString())
log.info("Child Asserts = "+i)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create Assignment H and B Batch" id="868ca3c6-16dd-4e96-9407-de8cecaaa885">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create Assignment H and B Batch" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
  "batchAssignmentName": "${#TestCase#batchAssignmentName}",
  "productIsbn": "9781975186777",
  "productId": "9781975186777",
  "courseId": "${#TestSuite#CourseId}",
  "assignments": [${#TestCase#AllBatchAsignmnetData}],
  "consumer": "CPE",
  "isCoded": ${CreateAssignment#isCoded},
  "commonSettings": {
    "timeZone": "${#Project#CreateAssignmentTimeZone}",
    "attemptLimit": ${CreateAssignment#maxAttempts},
    "isHighlightLateSubmission": ${CreateAssignment#isHighlightLateSubmission},
    "isBroadcastingRequired": ${CreateAssignment#isBroadcastingRequired}
  },
  "additionalDetails": {
    "skillId": "${#TestCase#skillId}",
    "assetCollectionName": "${#TestCase#batchAssignmentName}",
    "showActivityCheckBox": [
      {
         "sectionCode": [
          "*"
        ],
        "showActivitiesCheckBox": ${CreateAssignment#showActivitiesCheckBox}
      }
    ],
    "resourceTypeId": "10"
  },
  "metaInformation": {
    "isCoded": ${CreateAssignment#isCoded}
  }
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="b5686779-9fb6-4646-98bc-284a43e4d2ee" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${Create Assignment#Response}' )

def childAssertsCount = context.expand( '${#TestCase#ChildAssertsCount}' )

def verifyResponse = new JsonSlurper().parseText(response)
assert verifyResponse.batchId != null
assert verifyResponse.assignmentUUID!= null
//log.info(verifyResponse.assignmentUUID.size())
assert verifyResponse.assignmentUUID.size() ==childAssertsCount as int</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Enter Child Assignment Details Vism" id="07d81630-0bca-44fa-855e-65f3e4758a2f">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Enter Child Assignment Details Vism" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create Course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
	 "attemptType": "${CreateAssignment#attemptType}",
      "assignmentType": 
      {
        "type": "ModifiedInCode"
      },
      "submissionCount": ${CreateAssignment#submissionCount},
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "${#TestCase#DueDate}",
          "dueDateTime": "${#TestCase#DueTime}",
          "dueDateTimezone": "${#Project#CreateAssignmentTimeZone}",
          "accessibleFrom": "${#TestCase#accessDate}",
          "accessibleFromTimezone": "${#Project#CreateAssignmentTimeZone}",
          "isForEveryOne": true,
          "isImmediateAvailable":${CreateAssignment#isImmediateAvailable} ,
          "isUnlocked": ${CreateAssignment#isUnlocked}
        }
      ],</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>401</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Arrange Vsim Batch Assignment Vism" id="bc2eeda9-ddb8-483f-8c65-7bff85472aa7">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import com.eviware.soapui.model.testsuite.TestRunner.Status
import groovy.json.JsonOutput
import groovy.json.*

  class AssignmentBody {
    def resourceTypeName
    def name
    def resourceTypeId
    def assetType
    def assetCode
    def assetVersion
    def assetId
    def isGraded
    def isAssigned
    def points

  }
def value = testRunner.testCase.testSteps["Get product details"].testRequest.response
//def value = testRunner.testCase.testSteps["Get Product Assignment Details"].testRequest.response
def responseValue = value.responseContent

//def resourceTypeLabel = context.expand('${#TestSuite#ResourceTypeLabel}')
//testRunner.testCase.testSuite.setPropertyValue("resourceTypeLabel", resourceTypeLabel.toString())
def resourceTypeLabel ="Next-Gen vSim"
log.info(resourceTypeLabel.toString())

def slurper = new JsonSlurper()

def json = slurper.parseText(responseValue)

def allconatins = json.containers

def assignmentNames = []
def assignmentPublishedVersion = []
def assignmentExternalAssetId = []
def AllBatchAsignmnetData
def ChildAssetsList = []
def MapActivity = []
AllBatchAsignmnetData = "" //"\"assignments\": ["

def rawRequest1234 = context.expand('${Enter Child Assignment Details Vism#RawRequest}')
def attemptTypedata = context.expand('${Create Assignment#attemptType}')
//log.info(rawRequest1234)
String hhhhhh = rawRequest1234.toString()
def objectAllData
String assetCollectionCode = ""
String lableName = ""
int i = 0;
int assertNumber = 0
//def childCutoff = context.expand( '${#TestCase#ChildCutoff}' )
def assignmnetIndex = context.expand( '${#Project#AssignmnetIndex}' ) as int 

int ChildAssertCutOff = 1000//childCutoff as int
int assignmentNumber =assignmnetIndex

def gradedAssertCount =0
def assertExists = true;
for (def allconatinsAsserts in allconatins.containers.assets) {

  for (def eachAssert in allconatinsAsserts) {
    if (assertExists) {
      //log.info(eachAssert)
      for (def data in eachAssert) {

        if (data.resourceTypeLabel.toString().equals(resourceTypeLabel)) {
          assertNumber++
          if (assertNumber == assignmentNumber) {
            assertExists = false
            log.info("Batch  = " + data.label)
            lableName = data.label
            assetCollectionCode = data.assetCollectionCode
            def SkillsAssets = data.assets
            for (def dataassets in data.assets) {
              i++
              if (ChildAssertCutOff > i) {
                // log.info(dataassets.assetLabel)
                def resourceTypeNameData = "Skill Overview"
                def assignmentype = "BASIC_TYPE"
                if (dataassets.assetCode.toString().contains("VSIM")) {
                	gradedAssertCount++
                  assignmentExternalAssetId.add("\"" + dataassets.id.toString() + "\"")
                  MapActivity.add("\"" + dataassets.assetCode.toString() + "\"")
                  ChildAssetsList.add("\"" + "ENHANCED_VSIM" + "\"")

                  resourceTypeNameData = "Next-Gen vSim"
                  assignmentype = "ENHANCED_VSIM"
                } else if (dataassets.assetCode.toString().contains("HTML")) {
                  resourceTypeNameData = "Skill Overview"
                  assignmentype = "BASIC_TYPE"
                } else if (dataassets.assetCode.toString().contains("Quiz")) {
                	gradedAssertCount++
                  assignmentExternalAssetId.add("\"" + dataassets.id.toString() + "\"")
                  MapActivity.add("\"" + dataassets.assetCode.toString() + "\"")
                  ChildAssetsList.add("\"" + "Quiz" + "\"")
                  resourceTypeNameData = "Quiz"
                  assignmentype = "QUIZ"
                }

                AssignmentBody dataObject = new AssignmentBody(

                  resourceTypeName: resourceTypeNameData.toString(),
                  name: data.label + " :" + dataassets.assetLabel.toString(),
                  resourceTypeId: dataassets.resourceTypeId.toString(),
                  assetType: dataassets.assetType.toString(),
                  assetCode: dataassets.assetCode.toString(),
                  assetVersion: dataassets.publishedVersion.toString(),
                  assetId: dataassets.assetsId.toString(),
                  isGraded: (dataassets.gradable.toString().equals("N") ? false : true),
                  isAssigned: (dataassets.assignable.toString().equals("N") ? false : true),
                  points: (dataassets.gradable.toString().equals("N") ? 0 : 100),
                )
                def dataObjectValue = JsonOutput.toJson(dataObject)
                String scripitdata = dataObjectValue.toString().substring(1)
                def rawRequest1234temp = rawRequest1234
                rawRequest1234temp = rawRequest1234temp.replace("ModifiedInCode", assignmentype.toString())
                def childdAssert = rawRequest1234temp.toString() + scripitdata
                log.info(childdAssert)
                AllBatchAsignmnetData = AllBatchAsignmnetData + childdAssert.toString() + ","
              }

            }

          }

        }
      }
    }
  }
}
//log.info("final out put "+AllBatchAsignmnetData.toString())
AllBatchAsignmnetData = AllBatchAsignmnetData.toString().substring(0, AllBatchAsignmnetData.toString().size() - 1)
//AllBatchAsignmnetData=AllBatchAsignmnetData+"]"
log.info("final out put " + AllBatchAsignmnetData.toString())
testRunner.testCase.setPropertyValue("AllBatchAsignmnetData", AllBatchAsignmnetData.toString())
testRunner.testCase.setPropertyValue("batchAssignmentName", lableName.toString())
testRunner.testCase.setPropertyValue("skillId", assetCollectionCode.toString())
testRunner.testCase.setPropertyValue("skillId", assetCollectionCode.toString())

testRunner.testCase.setPropertyValue("MapedActivityIDs", MapActivity.toString())
testRunner.testCase.setPropertyValue("MapedAssertTypes", ChildAssetsList.toString())
testRunner.testCase.setPropertyValue("MapedAssertIds", assignmentExternalAssetId.toString())
  testRunner.testCase.setPropertyValue( "ChildAssertsCount", i.toString())
testRunner.testCase.setPropertyValue( "ChildAssertIndexCount", (i-1).toString())
testRunner.testCase.setPropertyValue( "GradedAssertCount", gradedAssertCount.toString())
//def childAssestCount = context.expand( '${#Project#childAssestCount}' )

log.info("asset id = " + MapActivity.toString())
log.info("lableName  ==" + ChildAssetsList.toString())
log.info("assetCollectionCode ==" + assignmentExternalAssetId.toString())

log.info("Child Asserts = " + i)
//log.info("ChildAssetsList =  "+  ChildAssetsList.toString())
//log.info("Size   "+MapActivity.size().toString())</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create Assignment Vism" id="3cb79070-c3df-4ca1-9ee7-a3558d900ca3">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignmnet" resourcePath="/api/phx-assignment-management/v1/assignment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create Assignment Vism" id="51dc24ed-ef5f-4c1c-90af-9e3bd077eea0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
  "batchAssignmentName": "${#TestCase#batchAssignmentName}",
  "productIsbn": "9781975186777",
  "productId": "9781975186777",
  "courseId": "${#TestSuite#CourseId}",
  "assignments": [${#TestCase#AllBatchAsignmnetData}],
  "consumer": "CPE",
  "isCoded": ${CreateAssignment#isCoded},
  "commonSettings": {
    "timeZone": "${#Project#CreateAssignmentTimeZone}",
    "attemptLimit": ${CreateAssignment#maxAttempts},
    "isHighlightLateSubmission": ${CreateAssignment#isHighlightLateSubmission},
    "isBroadcastingRequired": ${CreateAssignment#isBroadcastingRequired}
  },
  "additionalDetails": {
    "skillId": "${#TestCase#skillId}",
    "assetCollectionName": "${#TestCase#batchAssignmentName}",
    "showActivityCheckBox": [
      {
         "sectionCode": [
          "*"
        ],
        "showActivitiesCheckBox": ${CreateAssignment#showActivitiesCheckBox}
      }
    ],
    "resourceTypeId": "25"
  },
  "metaInformation": {
    "isCoded": ${CreateAssignment#isCoded}
  }
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a4bda559-ac84-43a9-b490-f3d6df6cc11a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="1f80a252-ca88-46e5-b0b0-756f4ff558df" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e9de801a-6597-4fe8-bc92-30a9481b29bd" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${Create Assignment#Response}' )

def childAssertsCount = context.expand( '${#TestCase#ChildAssertsCount}' )

def verifyResponse = new JsonSlurper().parseText(response)
assert verifyResponse.batchId != null
assert verifyResponse.assignmentUUID!= null
//log.info(verifyResponse.assignmentUUID.size())
assert verifyResponse.assignmentUUID.size() ==childAssertsCount as int</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create Assignment QC" id="0d3dd632-35b5-4331-9882-ce7b3628df6b">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Assignment" methodName="Method 1" resourcePath="/api/phx-assignment-management/v1/assignment" xsi:type="con:RestRequestStep">
      <con:restRequest name="Create Assignment QC" id="1a4e6fe9-5326-4c7d-953f-7c68b0ed4e29" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken} " xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>/api/phx-assignment-management/v1/assignment</con:endpoint>
        <con:request>{
  "courseId": "${#TestSuite#CourseId}",
  "name":"Assignment DashBord_${#TestSuite#CourseId}",
  "points": 100,
  "isGraded": true,
  "attemptType": "Highest Grade",
  "isHighlightLateSubmission": true,
  "isBroadcastingRequired": false,
  "productIsbn": "9781975186777",
  "sections": [
    {
      "sectionCode": [
        "*"
      ],
      "dueDate": "${#TestCase#DueDate}",
      "dueDateTime": "${#TestCase#DueTime}",
      "dueDateTimezone": "${#Project#CreateAssignmentTimeZone}",
      "accessibleFrom": "${#TestCase#accessDate}",
      "accessibleFromTime": "${#TestCase#accessTime}",
      "accessibleFromTimezone": "${#Project#CreateAssignmentTimeZone}",
      "isForEveryOne": ${CreateAssignment#isForEveryOne},
      "isImmediateAvailable":${CreateAssignment#isImmediateAvailable},
      "isUnlocked": ${CreateAssignment#isUnlocked}
    }
  ],
  "assets": {
    "assetId": ${#TestSuite#CollectionQnID},
    "assetVersion": "1.0.0",
    "assetType": "ASSET"
  },
   "assignmentType": {
    "type": "PREP_U_QC",
    "systemId": ""
  },
  "maxAttempts": 1,
  "resourceTypeId": "23",
  "prepuDetails": [
    {
      "answerKeyView": "completed",
      "reviewAnswers": true,
      "allowBookmarks": true,
      "shuffleQuestions": true,
      "timeLimitType": 1,
      "timeLimit": 50,
      "questionSet": ${#TestSuite#CollectionQnID},
      "numberOfQuestions": 1,
      "externalPrepuId": 0,
      "topicId": 0
    }
  ],
   "metaInformation": {},
  "examLocation": null
  
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-assignment-management/v1/assignment</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="7ff91766-5632-4a11-bab2-764d7d612b2c" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="70e43fa9-49f2-48d8-897f-3f3f611b57ce" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f76bdbd9-a026-4472-bd36-8a56e7c8e0ae" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;


def rawRequest = context.expand( '${Create Assignment#RawRequest}' )
def resp = context.expand( '${Create Assignment#Response}' )
def rawRequestCourse= context.expand( '${Create course#RawRequest}' )

def request = new JsonSlurper().parseText(rawRequest)
def response = new JsonSlurper().parseText(resp)
def DatarawRequestCourse = new JsonSlurper().parseText(rawRequestCourse)


//log.info(request.assets.assetId)
//log.info(response.assets.assetId)
assert request.name.toString().trim() == response.name
assert request.points == response.points
assert request.assets.assetId !=response.assets.assetId
assert request.isGraded==response.isGraded
assert request.attemptType==response.attemptType
assert request.isHighlightLateSubmission==response.isHighlightLateSubmission
assert request.sections.sectionCode==response.sections.sectionCode
assert request.sections.dueDate==response.sections.dueDateTime
assert request.sections.dueDateTime==response.sections.dueTime
assert request.sections.dueDateTimezone==response.sections.dueDateTimezone
assert request.sections.accessibleFromTimezone==response.sections.accessibleFromTimezone
assert request.sections.isForEveryOne==response.sections.isForEveryOne
assert request.sections.isImmediateAvailable==response.sections.isImmediateAvailable
assert request.sections.isUnlocked==response.sections.isUnlocked


 assert DatarawRequestCourse.products[0]== response.productIsbn
 assert request.assignmentType.type== request.assignmentType.type

assert request.prepuDetails[0].numberOfQuestions== response.prepuDetails[0].numberOfQuestions
assert request.prepuDetails[0].answerKeyView== response.prepuDetails[0].answerKeyView
assert request.prepuDetails[0].reviewAnswers== response.prepuDetails[0].reviewAnswers
assert request.prepuDetails[0].allowBookmarks== response.prepuDetails[0].allowBookmarks
assert request.prepuDetails[0].shuffleQuestions== response.prepuDetails[0].shuffleQuestions
assert request.prepuDetails[0].timeLimitType!=null
assert request.prepuDetails[0].timeLimit== response.prepuDetails[0].timeLimit
assert request.prepuDetails[0].questionSet== response.prepuDetails[0].questionSet
assert request.prepuDetails[0].questionSet== response.prepuDetails[0].questionSet</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Count" id="28c8635e-7801-4929-8ad3-b70ce401f6c5" name="Check count of [sectionCode]">
          <con:configuration>
            <path>$['sections'][*]['sectionCode']</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source Credetails" id="962f28c9-0cf1-482e-9492-8f67e40d3737">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>${#Project#DB_Data_ExcelSheetName}</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>StudentUserEmail</con:property>
      <con:property>StudentPassword</con:property>
      <con:property>WitchSection</con:property>
      <con:startRow/>
      <con:endRow>0</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Set Credetails" id="5981ec58-f474-4695-8a33-dae6b7141cf1">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;

def studentUserEmail = context.expand( '${Data Source Credetails#StudentUserEmail}' )
def studentPassword = context.expand( '${Data Source Credetails#StudentPassword}' )


//testRunner.testCase.testSuite.project.setPropertyValue("StudnetEmail", "AutomationStudent08")
//testRunner.testCase.testSuite.project.setPropertyValue("StudentPassword", "Welcome001")

testRunner.testCase.testSuite.project.setPropertyValue("StudnetEmail", studentUserEmail)
testRunner.testCase.testSuite.project.setPropertyValue("StudentPassword", studentPassword)


def witchSection = context.expand( '${Data Source Credetails#WitchSection}' )

log.info("sdsfdgf "+witchSection )

def data = "\${#Project#Section"+witchSection.toString()+"Password}"
/*
if(witchSection.toString()=="1")
{
	def section1Password = context.expand( '${#Project#Section1Password}' )
}
else if(witchSection.toString()=="2")
{
	def section1Password = context.expand( '${#Project#Section1Password}' )
}
*/

def section1Password = context.expand( data )
log.info("password "+section1Password)
testRunner.testCase.testSuite.project.setPropertyValue("StudentJoinPassword", section1Password)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="GetAccessTokenStudent1" id="e2053f00-69a2-4e39-ae6b-da1f1996a18b">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Auth API" resourcePath="/Authentication/UsernameInSso" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="GetAccessTokenStudent1" id="7a8b79ab-de89-4998-ba4f-b6708ff27d44" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://preprod-sso.hlrpbooks.com</con:endpoint>
        <con:request>{
  "Email": "${#Project#StudnetEmail}",
  "Password": "${#Project#StudentPassword}",
  "PostbackUrlOnSuccess": "${#Project#PostbackUrlOnSuccess}",
  "SiteId": "${#Project#SystemId}",
  "StaySignIn": false,
    "UrlToRedirectOnSuccess": "${#Project#UrlToRedirectOnSuccess}",
  "Timestamp": "2022-10-04T05:23:53.382Z",
  "SourceUrl": "${#Project#SourceUrl}",
  "AccessCode": "",
  "SiteInfoType": "Education",
  "WorkflowId": ""
}</con:request>
        <con:originalUri>https://preprod-sso.hlrpbooks.com/Authentication/UsernameInSso</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1de409a2-83ad-4119-9963-7a2d299ce263" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="32a7ec59-9333-4c75-89de-3863fec4fa2c" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="7b97dea9-f6f0-473e-ae65-367e168d9ca7" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def response = context.expand( '${GetAccessTokenStudent1#Response}' )


def verifyResponse = new JsonSlurper().parseText(response)
log.info(verifyResponse.Data.AuthenicationResult)

assert verifyResponse.Data.AuthenicationResult != null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Set Tokens Student1" id="8813e97c-bae6-4520-8695-865061fc6d90">
    <con:settings/>
    <con:config>
      <script><![CDATA[import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${GetAccessTokenStudent1#Response}' )

def resp = new JsonSlurper().parseText(response)

def start = resp.Data.AuthenicationResult.indexOf("<AccessToken>")+13;
def end = resp.Data.AuthenicationResult.indexOf("</AccessToken>");
def xaccesstoken = resp.Data.AuthenicationResult.substring(start, end);
//result["xaccessTokenStudent"]=xaccesstoken

def ssostart = resp.Data.AuthenicationResult.indexOf("<TokenKey>")+10;
def ssoend = resp.Data.AuthenicationResult.indexOf("</TokenKey>");
def ssotoken = resp.Data.AuthenicationResult.substring(ssostart, ssoend);
//result["ssoStudent"]=ssotoken

def IDstart = resp.Data.AuthenicationResult.indexOf("<UserId>")+8;
def IDend = resp.Data.AuthenicationResult.indexOf("</UserId>");
def StudentId = resp.Data.AuthenicationResult.substring(IDstart, IDend);


testRunner.testCase.testSuite.project.setPropertyValue("StudentUserId", StudentId)
testRunner.testCase.testSuite.project.setPropertyValue("xaccessTokenStudent", xaccesstoken)
testRunner.testCase.testSuite.project.setPropertyValue("ssoStudent", ssotoken)

log.info("StudentUserId = "+ StudentId)
log.info("xaccessTokenStudent =  " + xaccesstoken)
log.info("ssoStudent = "+ssotoken)]]></script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Loacte course in student join" id="2514b661-4ba1-4823-8884-f2d0e49b778e">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Student Search Course" resourcePath="/api/class-management/v2/class-wrapper/search/passcode/{Password}" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Loacte course in student join" id="481ffffb-0c31-49cf-b198-cc533d483980" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/class-management/v2/class-wrapper/search/passcode/</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="82ba8780-1ade-4633-9729-3d67b0db9a56" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>201</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="52a32018-748b-4575-b14a-52aa15f38cae" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d8338b4d-feef-4344-a50a-c85abb5fcf52" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
def response222 = context.expand( '${Create course#Response}' )

def rawRequest = context.expand( '${Create course#RawRequest}' )

def  responsedata= context.expand( '${Loacte course in student join#Response}' )

def  rawRequestData= new JsonSlurper().parseText(rawRequest)
def response = new JsonSlurper().parseText(responsedata)
def response22 = new JsonSlurper().parseText(response222)

assert response.message =="Passcode search completed."
assert response.data.id  == response22.sectionId
assert response.data.name == rawRequestData.sectionName
assert response.data.number == rawRequestData.number
assert response.data.products.isbn  == rawRequestData.products
assert response.data.academicTerm  == rawRequestData.academicTerm
assert response.data.academicYear  == rawRequestData.academicYear
assert response.data.state=="ACTIVE"
assert response.data.instructors !=null
assert response.data.instructors[0].userId == rawRequestData.instructor
assert response.data.courseId  == response22.id
assert response.data.courseName  == rawRequestData.name
assert response.data.timeZoneId == rawRequestData.timeZoneId
assert response.data.sfdcAccountId  == rawRequestData.sfdcAccountId
assert response.data.programTypeId  == rawRequestData.programTypeId

assert response.data.startDate.toString().substring(0,response.data.startDate.toString().size()-1) == rawRequestData.startDate.toString().substring(0,rawRequestData.startDate.toString().size()-5)

assert response.data.endDate.toString().substring(0,response.data.endDate.toString().size()-1) == rawRequestData.endDate.toString().substring(0,rawRequestData.endDate.toString().size()-5)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Password" value="${#Project#StudentJoinPassword}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Password</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Groovy Script" id="5e281c93-0354-45a3-a02d-523c1a149b7c">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;

def response = context.expand( '${Loacte course in student join#Response#$[\'data\'][\'id\']}' )

log.info(response)
testRunner.testCase.testSuite.project.setPropertyValue("JoinedSectionid", response)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Student join a course" id="92d61304-c4e6-4f22-a7ad-2dfbb1cb2877">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Student Join Course" resourcePath="/api/ccm/v2/private/user/enrollment" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Student join a course" id="121a8d27-235a-4523-b0de-29d285db07f0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
  "id": "${Loacte course in student join#Response#$['data']['id']}",
  "role": "STUDENT",
  "status": "ACTIVE"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/ccm/v2/private/user/enrollment</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="8a6050a3-5f0c-4a36-8005-d97bb006323e" name="Valid HTTP Status Codes" disabled="true">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="6deda5a2-b3c7-49a7-873a-2b58dbed9bc9" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="ae524d2f-124b-46a5-891f-f58810d4aaf0" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;
def response = context.expand( '${Student join a course#Response}' )

def verifyResponse = new JsonSlurper().parseText(response)

assert verifyResponse.enrollmentToken != null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="wait for assignmnet in student end" id="96b87a1d-145e-49d0-aa34-29c1a3709b34">
    <con:settings/>
    <con:config>
      <delay>180000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Run Attempt Single Resource Type CPE Assignments" id="13cf8a56-ac88-455b-8c97-26189241260e">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:RunTestCaseStep" copyHttpSession="true" copyLoadTestProperties="true" ignoreEmptyProperties="true">
      <con:targetTestCase>c176387a-a004-4893-a839-30608d68cbb1</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>accessDate</con:name>
          <con:value>2023-04-18T06:11:52-05:00</con:value>
        </con:property>
        <con:property>
          <con:name>DueDate</con:name>
          <con:value>2023-04-18</con:value>
        </con:property>
        <con:property>
          <con:name>EffectiveDate</con:name>
          <con:value>2023-04-18T00:00:00.000Z</con:value>
        </con:property>
        <con:property>
          <con:name>ExpireDate</con:name>
          <con:value>2023-05-18T00:00:00.000Z</con:value>
        </con:property>
        <con:property>
          <con:name>tomorrow</con:name>
          <con:value>Tue, Apr 18 2023</con:value>
        </con:property>
        <con:property>
          <con:name>tomorrow2</con:name>
          <con:value>2023-04-18</con:value>
        </con:property>
        <con:property>
          <con:name>instructorUserId</con:name>
          <con:value>0345b785-ba3e-4b3a-9c6c-447101694d75</con:value>
        </con:property>
        <con:property>
          <con:name>numberOfAttempts</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>StudentenrollmentToken</con:name>
          <con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE4ODU5NjAsImp0aSI6IjAxZDNiYzFlLWJlMzMtNGNjOS04OGU3LWI4ZTcxMjMzNTNhNSIsImlhdCI6MTY4MTcxMzE2MCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNjgxNzEzMTYwLCJzdWIiOiI5ZTZlOGM1Ny02ODNlLTRjNTQtODkzMS00NDc0MDE1OWQ2ODUiLCJobHJwX2NjbSI6W3siciI6InMiLCJjcnMiOiJnU0VCUUJLRzk5SUIiLCJzZWMiOiJnU0VCUUJLRzk5SUJfc1NFQlFCS0dBMlIifV19.kKMRJHB4y0Tno_H-esNrWhe-RsUn8zHCmazkZhhKCgXyBFbLRWiD2zyGp5MOZCZbIW1WIlQg4CjosIPwQtw204mHb6iNohaZtznNKEaZ5_BbW3241Stf9E_xo2X9qBCl_zrYUpX1M4uR066aPvoD5d_hViNCAynUW7OXzK3nC4VgF9F6amwQSDrje6AeD8D8vLTw_kmFk9eGSkVvEWnd5ZssYCAzqyVdgadLGbFrWj2N3TOIPsEkgR3HoJ17Ipg_ZCAwBqrAiPG5WMqQsNbMexKeSeb2bMA5FQuasV9Qc3YK9aphsr4ER17HAAZ1F1GtO_gmaYBO8xKU11WX1_UDGx5Dt0cpeRM24oonRf4sGS-BIsWXCsG8fTyaYzfJajIv7xh-ibK5NYtp2fji4W1l9ErKyfMX8bh27B5TnSOPjKZQydo4bqRnpK6IeiSCKmhbi195Yzzzns9h3Zs0edCV70UnEnFPO23gHIM2tSjkk_HNUitc8rR3ErYXKQx_p3t4RyAYcP8dbqi0RdepDBYoyR8LtFpfF63PYKKSk9SD5ePpqcqyqfHDibuL_Onmn0q14sF5TkXmnFLrj15Bxx4dgJV6BwTwbc3n_I-y5unOB6nbSR2PwINbsueSx7hjmebMPzZJqUwCGeehUnvGvt5vMbMY1ofYglw1HxryhcCvgdo</con:value>
        </con:property>
        <con:property>
          <con:name>accessTime</con:name>
          <con:value>06:11 AM</con:value>
        </con:property>
        <con:property>
          <con:name>DueTime</con:name>
          <con:value>06:11 AM</con:value>
        </con:property>
        <con:property>
          <con:name>startAt</con:name>
          <con:value>2023-05-08T17:08:8.605Z</con:value>
        </con:property>
        <con:property>
          <con:name>completedAt</con:name>
          <con:value>2023-05-08T17:11:11.605Z</con:value>
        </con:property>
        <con:property>
          <con:name>sentAt</con:name>
          <con:value>2023-05-08T17:12:12.605Z</con:value>
        </con:property>
        <con:property>
          <con:name>Assertid</con:name>
          <con:value>11522</con:value>
        </con:property>
        <con:property>
          <con:name>Loop</con:name>
          <con:value>12</con:value>
        </con:property>
        <con:property>
          <con:name>PrepuExternalPrepuId</con:name>
          <con:value>["1501245442", "1501245443", "1501245444", "1501245445"]</con:value>
        </con:property>
        <con:property>
          <con:name>PrepuTargetMasteryLevel</con:name>
          <con:value>["8", "8", "8", "8"]</con:value>
        </con:property>
        <con:property>
          <con:name>PrepuName</con:name>
          <con:value>["Assessment", "Chapter 3: Health Education and Health Promotion", "Caring Interventions", "Chapter 4: Adult Health and Physical, Nutritional, and Cultural Assessment"]</con:value>
        </con:property>
        <con:property>
          <con:name>PrePuCutOff</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>PrepuexternalAssetId</con:name>
          <con:value>["316", "15041", "319", "15042"]</con:value>
        </con:property>
        <con:property>
          <con:name>SubmittedAssignmentsCount</con:name>
        </con:property>
        <con:property>
          <con:name>StatusCode</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>accessDate</con:entry>
        <con:entry>DueDate</con:entry>
        <con:entry>EffectiveDate</con:entry>
        <con:entry>ExpireDate</con:entry>
        <con:entry>tomorrow</con:entry>
        <con:entry>tomorrow2</con:entry>
        <con:entry>instructorUserId</con:entry>
        <con:entry>numberOfAttempts</con:entry>
        <con:entry>StudentenrollmentToken</con:entry>
        <con:entry>accessTime</con:entry>
        <con:entry>DueTime</con:entry>
        <con:entry>startAt</con:entry>
        <con:entry>completedAt</con:entry>
        <con:entry>sentAt</con:entry>
        <con:entry>Assertid</con:entry>
        <con:entry>Loop</con:entry>
        <con:entry>PrepuExternalPrepuId</con:entry>
        <con:entry>PrepuTargetMasteryLevel</con:entry>
        <con:entry>PrepuName</con:entry>
        <con:entry>PrePuCutOff</con:entry>
        <con:entry>PrepuexternalAssetId</con:entry>
      </con:returnProperties>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="ChildAsserts Video" id="c6ad85e0-5ea5-4a8b-a62d-5f50001af26a">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>Itrations</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:startRow/>
      <con:endRow>2</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay 2" id="75e5fa61-d811-490f-b823-16d6c2684515">
    <con:settings/>
    <con:config>
      <delay>4000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source Video" id="ee4318e5-255d-4a16-86dc-c5d406defc7c">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>loop</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:property>Score</con:property>
      <con:startRow/>
      <con:endRow>${#TestCase#numberOfAttempts}</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Push Time" id="b902e665-5465-42fd-a280-66cdd21e4fd4">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )

log.info("hv "+attemptBodyData)
if(!(attemptBodyData.toString().equals("")))
{

def loop = context.expand( '${#TestCase#Loop}' )
def loop1234 = loop as int 
log.info("before "+loop1234)
	log.info("before 34343 "+loop1234)
	testRunner.testCase.setPropertyValue("Loop", (loop1234+1).toString())
 loop1234 = context.expand( '${#TestCase#Loop}' )

log.info("After "+loop1234)
}

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-60000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Push to SQS Video" id="9ba3fd58-f50c-40cd-ac0d-211cfbbd4949">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Push to SQS Video" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{
    "id": "lab2t60x",
    "meta": {
        "videoPosition": 357.813099
    },
    "type": "Achievement",
    "score": "1",
    "sentAt": "${#TestCase#sentAt}",
     "userId" : "${#Project#StudentUserId}",
    "classIds": [
         "${#Project#JoinedSectionid}"
    ],
    "systemId": "${#Project#SystemId}",
    "productId": null,
    "startedAt": "${#TestCase#startAt}",
   "activityId" : "${Create Assignment Video batch#RawRequest#$['assignments'][${ChildAsserts Video#Itrations}]['assetCode']}",

    "completedAt": "${#TestCase#completedAt}",
    "collectionId": null,
   "correlationId" : "${Verify updated assignment in assignment page student end#Response#$[0]['activities'][${ChildAsserts#Itrations}]['id']}",
    "positionUpdated": false
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push" id="3cd42622-0953-4cc3-adf2-dfd378aeba4c">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Instructor Video" id="a142836b-475a-4ec5-afcb-7b67b0bd2726">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Instructor Video" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59cc1a12-5ea2-49c5-b2ee-bdb01eeccdf4" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment Video batch#RawRequest#$['assignments'][${ChildAsserts Video#Itrations}]['assetId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Instructor 2#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )



def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int

assert Getresponse.data[0].submissionHistory.size()== value+1 
if(Getresponse.data[0].submissionHistory.size()== value+1)
{
log.info(Getresponse.data[0].submissionHistory.size())

for(int i =0;i&lt;Getresponse.data[0].submissionHistory.size();i++)
{
def submissionHistory =Getresponse.data[0].submissionHistory[i]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == "0"
assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true
}
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS Video#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment Video batch#RawRequest#$['assignments'][${ChildAsserts Video#Itrations}]['assetId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Student Video" id="2a477de4-11e8-4c8c-ad92-7e32b2f70ac4">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Student Video" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Student 2#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int

assert Getresponse.data[0].submissionHistory.size()== value+1 
if(Getresponse.data[0].submissionHistory.size()== value+1)
{
log.info(Getresponse.data[0].submissionHistory.size())

for(int i =0;i&lt;Getresponse.data[0].submissionHistory.size();i++)
{
def submissionHistory =Getresponse.data[0].submissionHistory[i]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == "0"

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true
}
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e1a4dfe4-7dec-420a-ab9b-0552cec02e23" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment Video batch#RawRequest#$['assignments'][${ChildAsserts Video#Itrations}]['assetId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS Video#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment Video batch#RawRequest#$['assignments'][${ChildAsserts Video#Itrations}]['assetId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop Video" id="ab1d8b5f-5e4a-4986-9a84-4e74f2bd3714">
    <con:settings/>
    <con:config>
      <dataSourceStep>Data Source Video</dataSourceStep>
      <targetStep>Generate Assignmnet  Push Time</targetStep>
      <discardResults>true</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop Child Video" id="1257d9a5-d954-4aa7-9961-b7be629b2a41">
    <con:settings/>
    <con:config>
      <dataSourceStep>ChildAsserts Video</dataSourceStep>
      <targetStep>Delay 2</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="ChildAsserts HandB" id="a181a8e0-e99b-48cf-aa2e-37ef8c5a5e35">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>Itrations</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:startRow/>
      <con:endRow>2</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay" id="0ca32c7b-6d54-4be9-8433-30500dd0dd7c">
    <con:settings/>
    <con:config>
      <delay>4000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source HandB" id="a445724d-7b04-40d4-9d30-99302d9d713f">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>loop</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:property>Score</con:property>
      <con:startRow/>
      <con:endRow>${#TestCase#numberOfAttempts}</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Push Time HandB" id="3d0b16d9-67e5-4505-b4c8-0ad3f7bb514c">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )

log.info("hv "+attemptBodyData)
if(!(attemptBodyData.toString().equals("")))
{

def loop = context.expand( '${#TestCase#Loop}' )
def loop1234 = loop as int 
log.info("before "+loop1234)
	log.info("before 34343 "+loop1234)
	testRunner.testCase.setPropertyValue("Loop", (loop1234+1).toString())
 loop1234 = context.expand( '${#TestCase#Loop}' )

log.info("After "+loop1234)
}

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-60000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Push to SQS HandB" id="0be5ce33-e1a6-4e91-a958-391e291802bb">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Push to SQS HandB" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{

	
  "startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",

"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}",
   "productId" : null,
   "type" : "Achievement",
   "score" : "1",
   "positionUpdated" : false,
   "id" : "ldwsddmv",
 
   "correlationId" : "${Verify updated assignment in assignment page student end#Response#$[0]['activities'][${ChildAsserts#Itrations}]['id']}",
   "activityId" : "${Create Assignment H and B Batch#RawRequest#$['assignments'][${ChildAsserts HandB#Itrations}]['assetCode']}",
   
   
   "classIds" : [
   "${#Project#JoinedSectionid}"
   ],
   "collectionId" : null,
   "meta" : {
      "videoPosition" : 70.592992
   }
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay 5" id="5b346a2a-7d88-4de1-a520-41f63ed62299">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Instructor HandB" id="f0bd1138-7509-41bd-af11-0e01bd7f9c4a">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Instructor HandB" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59cc1a12-5ea2-49c5-b2ee-bdb01eeccdf4" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment H and B Batch#RawRequest#$['assignments'][${ChildAsserts HandB#Itrations}]['assetId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Instructor 2#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )



def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int

assert Getresponse.data[0].submissionHistory.size()== value+1 
if(Getresponse.data[0].submissionHistory.size()== value+1)
{
log.info(Getresponse.data[0].submissionHistory.size())

for(int i =0;i&lt;Getresponse.data[0].submissionHistory.size();i++)
{
def submissionHistory =Getresponse.data[0].submissionHistory[i]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == "0"
assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true
}
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS HandB#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment H and B Batch#RawRequest#$['assignments'][${ChildAsserts HandB#Itrations}]['assetId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Student Video HandB" id="fda6419f-db21-49d5-9fc2-fe4cf6c1a5dd">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Student Video HandB" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Student 2#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int

assert Getresponse.data[0].submissionHistory.size()== value+1 
if(Getresponse.data[0].submissionHistory.size()== value+1)
{
log.info(Getresponse.data[0].submissionHistory.size())

for(int i =0;i&lt;Getresponse.data[0].submissionHistory.size();i++)
{
def submissionHistory =Getresponse.data[0].submissionHistory[i]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == "0"

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true
}
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e1a4dfe4-7dec-420a-ab9b-0552cec02e23" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment H and B Batch#RawRequest#$['assignments'][${ChildAsserts HandB#Itrations}]['assetId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS HandB#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment H and B Batch#RawRequest#$['assignments'][${ChildAsserts HandB#Itrations}]['assetId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop" id="8d91ba2c-4458-496b-8355-740c46306dd7">
    <con:settings/>
    <con:config>
      <dataSourceStep>Data Source HandB</dataSourceStep>
      <targetStep>Generate Assignmnet  Push Time HandB</targetStep>
      <discardResults>true</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop HandB" id="745e4adb-adfd-4ffe-be89-304acb5c6890">
    <con:settings/>
    <con:config>
      <dataSourceStep>ChildAsserts HandB</dataSourceStep>
      <targetStep>Delay</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Get Vism Assignments Batch" id="cd20a4da-9351-49f7-8afa-f59de0c18409">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Get Assignmnet details" resourcePath="/api/phx-batch-assignment-management/v1/assignment-wrapper/assignments" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Get Vism Assignments Batch" id="608a2f07-c848-4f3c-9c0b-4ba30a4e55c5" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignment-wrapper/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="0897307f-eca5-471d-8ab1-97dbf6abd045" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="mergeBatch" value="${Create Assignment Vism#Response#$['batchId']}"/>
          <con:entry key="course" value="${#TestSuite#CourseId}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>course</con:entry>
          <con:entry>mergeBatch</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source Vsim" id="5ff094cc-8bf4-4151-8a2c-e2086efae0ed">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>loop</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:property>Score</con:property>
      <con:startRow/>
      <con:endRow>${#TestCase#numberOfAttempts}</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Push Time Vsim" id="15f57b46-c755-4cc2-a07e-419e2e37e9f1">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )


Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-60000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Attempt Pre Quiz" id="891b9c8c-4bdb-4e90-9d7a-06e905afe1c9">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Attempt Pre Quiz" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{

 "classIds" : [
"${#Project#JoinedSectionid}"
   ],	
  "startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",

"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}",
    "id": "17064369",
    "meta": {
        "quizId": ${#TestCase#MapedAssertIds#$[0]},
        "quizTime": "1800 seconds",
        "quizVersion": 1,
        "totalCorrect": 2,
        "totalAnswered": 10,
        "totalIncorrect": 8,
        "totalQuestions": 10,
        "totalTimeSpent": "38 seconds",
        "totalUnattempted": 0
    },
    "type": "Scored",
    "score": "68",
     "productId": null,
    "activityId": "${#TestCase#MapedActivityIDs#$[0]}"
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push 2 2" id="91e02aee-18d5-4087-8d91-b519bfbc281f">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Pre Quiz Submission History Instructor" id="f70e7f99-d2bf-4c85-aae3-fbdc1718321d">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Pre Quiz Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Pre Quiz#RawRequest}' )

def response = context.expand( '${Verify Pre Quiz Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)
 
def systemId = context.expand( '${#Project#SystemId}' )
//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
log.info(value)

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id


assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName != null


assert submissionHistory.score.toString() == PushSQSrequest.score
assert submissionHistory.percentage.toString() ==PushSQSrequest.score


assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true

//assert Getrespon.submissionHistory[0].submissionId !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="04969ecc-d9aa-496c-96e7-a90f4ace44db" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Attempt Pre Quiz#RawRequest#$['meta']['quizId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Attempt Pre Quiz#RawRequest#$['meta']['quizId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Pre Quiz Submission History Student" id="2355f5f3-c0a2-4d78-95de-ed18ea464684">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Pre Quiz Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Pre Quiz#RawRequest}' )

def response = context.expand( '${Verify Pre Quiz Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()


def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName !=null


assert submissionHistory.score.toString() == PushSQSrequest.score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59aa2692-8bf5-4444-a49c-0d39df8da98f" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Attempt Pre Quiz#RawRequest#$['meta']['quizId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Attempt Pre Quiz#RawRequest#$['meta']['quizId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Attempt Vsim SBR" id="b7d33c27-cf4e-4577-8454-4f1934c6b1c0">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Attempt Vsim SBR" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{

 "classIds" : [
   "${#Project#JoinedSectionid}"
   ],	
  "startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",

"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}",
	
    "id": "4ca23b75-97a5-4768-b39b-d2193551faa5",
    "meta": {
        "sbar": {
            "situationScore": 33,
            "assessmentScore": 46,
            "backgroundScore": 57,
            "recommendationScore": 43
        },
        "debriefingType": "sbar",
        "fatalErrorCount": null,
        "minorErrorCount": null,
        "moderateErrorCount": null
    },
    "type": "Scored",
    "score": "68",
    "productId": null,
    "activityId": "assignmentAssetIdentifier:${Verify updated assignment in assignment page student end#Response#$[0]['activities'][2]['id']}-${#TestCase#MapedActivityIDs#$[1]}-",
    "correlationId":  "assignmentAssetIdentifier:${Verify updated assignment in assignment page student end#Response#$[0]['activities'][2]['id']}-${#TestCase#MapedActivityIDs#$[1]}-"


}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push 2 2 2" id="a934f72b-c5b6-4c43-ba08-7cac1cb89589">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify SBR Submission History Instructor" id="d6fdf664-3320-4dc8-97aa-a3f9c0212489">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify SBR Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Vsim SBR#RawRequest}' )

def response = context.expand( '${Verify SBR Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' )

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert PushSQSrequest.activityId.contains(submissionHistory.activityId )
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null
assert submissionHistory.metaData.sbar !=null
assert submissionHistory.metaData.sbar.situationScore!=null
assert submissionHistory.metaData.debriefingType=="sbar"
assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4ee7f659-ed8c-4b79-a5a4-e291f19c3a10" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#MapedAssertIds#$[1]}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#MapedAssertIds#$[1]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value="sbar"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify SBR Submission History Student" id="77f856c3-1546-4e35-8983-be4755bbe3d5">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify SBR Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Vsim SBR#RawRequest}' )

def response = context.expand( '${Verify SBR Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' ) as int 

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert PushSQSrequest.activityId.contains(submissionHistory.activityId )
assert submissionHistory.activityName ==null


assert submissionHistory.score ==score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null
assert submissionHistory.metaData.sbar !=null
assert submissionHistory.metaData.sbar.situationScore!=null
assert submissionHistory.metaData.debriefingType=="sbar"

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="01c350c9-44ad-4592-8e68-5c578ec9a9bc" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#MapedAssertIds#$[1]}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#MapedAssertIds#$[1]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value="sbar"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Attempt Vsim Silmualtion" id="e3c38ca3-fa9b-491e-a0db-82356a17c47e">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Attempt Vsim Silmualtion" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{

"classIds" : [
    "${#Project#JoinedSectionid}"
   ],	
  "startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",

"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}",
	
    "id": "4a214bba-4a43-4c56-80bd-27cd7a56e1a8",
    "meta": {
        "sbar": {
            "situationScore": null,
            "assessmentScore": null,
            "backgroundScore": null,
            "recommendationScore": null
        },
        "debriefingType": "general",
        "fatalErrorCount": 1,
        "minorErrorCount": 5,
        "moderateErrorCount": 5
    },
    "type": "Scored",
    "score": "78",
    "productId": null,
    "activityId": "assignmentAssetIdentifier:${Get Vism Assignments Batch#Response#$[0]['activities'][2]['id']}-${#TestCase#MapedActivityIDs#$[1]}-",
    "correlationId":  "assignmentAssetIdentifier:${Get Vism Assignments Batch#Response#$[0]['activities'][2]['id']}-${#TestCase#MapedActivityIDs#$[1]}-"
    
     
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push 2" id="8eb6ff61-f1ff-4016-bdc6-9770860ca494">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Simulation Submission History Instructor" id="018bedce-9a5a-44f7-ba41-8679e48b76f3">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Simulation Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Vsim Silmualtion#RawRequest}' )

def response = context.expand( '${Verify Simulation Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' ) as int 


assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert PushSQSrequest.activityId.contains( submissionHistory.activityId )
assert submissionHistory.activityName ==null


assert submissionHistory.score == score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null
assert submissionHistory.metaData.debriefingType== "general"
assert submissionHistory.metaData.sbar != null
assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3c6ec765-9175-4b1a-83d8-91d3444caf34" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#MapedAssertIds#$[1]}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#MapedAssertIds#$[1]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value="general"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Simulation Submission History Student" id="31647da2-18af-40aa-8b4e-286d977caf5a">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Simulation Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Vsim Silmualtion#RawRequest}' )

def response = context.expand( '${Verify Simulation Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' ) as int 

assert Getresponse.data[0].submissionHistory.size()== value+1 


def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert PushSQSrequest.activityId.contains(submissionHistory.activityId )
assert submissionHistory.activityName ==null


assert submissionHistory.score == score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null
assert submissionHistory.metaData.sbar !=null
assert submissionHistory.metaData.debriefingType== "general"
assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="898cc8fe-777d-42bb-8b78-6c3620e5a091" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#MapedAssertIds#$[1]}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Pre Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#MapedAssertIds#$[1]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value="general"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Attempt Post Quiz" id="12a2c299-a141-41d5-8418-5b9563fef11c">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Attempt Post Quiz" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{
    "id": "17064369",
    "meta": {
        "quizId": ${#TestCase#MapedAssertIds#$[2]},
        "quizTime": "1800 seconds",
        "quizVersion": 1,
        "totalCorrect": 2,
        "totalAnswered": 10,
        "totalIncorrect": 8,
        "totalQuestions": 10,
        "totalTimeSpent": "38 seconds",
        "totalUnattempted": 0
    },
    "type": "Scored",
    "score": "78",
     "productId": null,
    "activityId": "${#TestCase#MapedActivityIDs#$[2]}",
   "classIds" : [
   "${#Project#JoinedSectionid}"
   ],	
  "startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",

"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}"
    
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push 3" id="59b1637c-7362-4fd0-a12d-b767d570dde0">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Post Quiz Submission History Instructor" id="7fab9cd4-ab80-492c-886a-547559e2c45e">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Post Quiz Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Post Quiz#RawRequest}' )

def response = context.expand( '${Verify Post Quiz Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' )

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() ==score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="faf2e008-de2a-4cd3-b282-6dfc5802852f" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Attempt Post Quiz#RawRequest#$['meta']['quizId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Post Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Attempt Post Quiz#RawRequest#$['meta']['quizId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Post Quiz  Submission History Student" id="722934a8-838f-489c-8ac9-65a8e7b3ec4b">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Post Quiz  Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Post Quiz#RawRequest}' )

def response = context.expand( '${Verify Post Quiz  Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' )

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="93b642a0-a4a8-4f7b-8a47-bce968a70136" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Attempt Post Quiz#RawRequest#$['meta']['quizId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Attempt Post Quiz#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Attempt Post Quiz#RawRequest#$['meta']['quizId']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Push Time QC" id="f877374a-11cb-4cd7-98ec-9be9bd6b4da7">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )

log.info("hv "+attemptBodyData)
if(!(attemptBodyData.toString().equals("")))
{

def loop = context.expand( '${#TestCase#Loop}' )
def loop1234 = loop as int 
log.info("before "+loop1234)
	log.info("before 34343 "+loop1234)
	testRunner.testCase.setPropertyValue("Loop", (loop1234+1).toString())
 loop1234 = context.expand( '${#TestCase#Loop}' )

log.info("After "+loop1234)
}

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-60000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Push to SQS QC" id="178fb28c-cf83-493d-82d6-79d163881585">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Push to SQS QC" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestCase#StudentenrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{
  "id": "${Create Assignment QC#Response#$['assets']['assetId']}",
  "meta": {
    "points": 10,
    "partial_credit_scoring": {
      "total_points": 1,
      "points_earned": 1,
      "points_attempted": 1
    }
  },
  "type": "Scored",
  "score": "${#Project#AttemptScore}",
  "sentAt": "${#TestCase#sentAt}",
  "userId": "${#Project#StudentUserId}",
  "quizzes": [
    {
      "id": "1710708871",
      "name": "Quiz 1",
      "questionsAnswered": 1
    }
  ],
  "classIds": [
 "${#Project#JoinedSectionid}"
  ],
  "systemId": "${#Project#SystemId}",
  "sectionId": "question_collection",
  "startedAt": "${#TestCase#startAt}",
  "activityId": "${Create Assignment QC#Response#$['prepuDetails'][0]['externalPrepuId']}",
  "completedAt": "${#TestCase#completedAt}",
  "sectionName": "Question Collection Assignments",
  "activityName": "${Create Assignment QC#RawRequest#$['name']}",
  "masteryLevel": null,
  "quizzesTaken": 1,
  "correlationId":${Create Assignment QC#Response#$['id']},
  "isAnsweredAllQuestions": true
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push 3 2" id="f3f93eac-f75c-44c0-a24f-934bbafb5aa0">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify QC Submission History Instructor" id="492f32ef-2f71-440c-9e91-99d2b7f7feb6">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify QC Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Post Quiz#RawRequest}' )

def response = context.expand( '${Verify Post Quiz Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' )

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() ==score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="faf2e008-de2a-4cd3-b282-6dfc5802852f" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment QC#Response#$['prepuDetails'][0]['questionSet']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS QC#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment QC#Response#$['prepuDetails'][0]['questionSet']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify QC Submission History Student" id="1ad99b45-4bab-4bee-9f06-8ce5a346764a">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify QC Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Attempt Post Quiz#RawRequest}' )

def response = context.expand( '${Verify Post Quiz  Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

//assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()

def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def score = context.expand( '${Data Source#Score}' )

assert Getresponse.data[0].submissionHistory.size()== value+1 

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName ==null


assert submissionHistory.score.toString() == score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="93b642a0-a4a8-4f7b-8a47-bce968a70136" name="Match content of [assetId]">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${Create Assignment QC#Response#$['prepuDetails'][0]['questionSet']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS QC#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${Create Assignment QC#Response#$['prepuDetails'][0]['questionSet']}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Student id</con:entry>
          <con:entry>isAssigned</con:entry>
          <con:entry>classId</con:entry>
          <con:entry>assetId</con:entry>
          <con:entry>sectionId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Change user" id="5b7d0929-5cce-444f-abe7-714fcb4928f8">
    <con:settings/>
    <con:config>
      <dataSourceStep>Data Source Credetails</dataSourceStep>
      <targetStep>Set Credetails</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>accessDate</con:name>
      <con:value>2023-05-08T08:56:44+05:30</con:value>
    </con:property>
    <con:property>
      <con:name>DueDate</con:name>
      <con:value>2023-05-09</con:value>
    </con:property>
    <con:property>
      <con:name>EffectiveDate</con:name>
      <con:value>2023-04-18T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>ExpireDate</con:name>
      <con:value>2023-05-18T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>tomorrow</con:name>
      <con:value>Tue, Apr 18 2023</con:value>
    </con:property>
    <con:property>
      <con:name>tomorrow2</con:name>
      <con:value>2023-04-18</con:value>
    </con:property>
    <con:property>
      <con:name>instructorUserId</con:name>
      <con:value>0345b785-ba3e-4b3a-9c6c-447101694d75</con:value>
    </con:property>
    <con:property>
      <con:name>numberOfAttempts</con:name>
      <con:value>0</con:value>
    </con:property>
    <con:property>
      <con:name>StudentenrollmentToken</con:name>
      <con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE4ODU5NjAsImp0aSI6IjAxZDNiYzFlLWJlMzMtNGNjOS04OGU3LWI4ZTcxMjMzNTNhNSIsImlhdCI6MTY4MTcxMzE2MCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNjgxNzEzMTYwLCJzdWIiOiI5ZTZlOGM1Ny02ODNlLTRjNTQtODkzMS00NDc0MDE1OWQ2ODUiLCJobHJwX2NjbSI6W3siciI6InMiLCJjcnMiOiJnU0VCUUJLRzk5SUIiLCJzZWMiOiJnU0VCUUJLRzk5SUJfc1NFQlFCS0dBMlIifV19.kKMRJHB4y0Tno_H-esNrWhe-RsUn8zHCmazkZhhKCgXyBFbLRWiD2zyGp5MOZCZbIW1WIlQg4CjosIPwQtw204mHb6iNohaZtznNKEaZ5_BbW3241Stf9E_xo2X9qBCl_zrYUpX1M4uR066aPvoD5d_hViNCAynUW7OXzK3nC4VgF9F6amwQSDrje6AeD8D8vLTw_kmFk9eGSkVvEWnd5ZssYCAzqyVdgadLGbFrWj2N3TOIPsEkgR3HoJ17Ipg_ZCAwBqrAiPG5WMqQsNbMexKeSeb2bMA5FQuasV9Qc3YK9aphsr4ER17HAAZ1F1GtO_gmaYBO8xKU11WX1_UDGx5Dt0cpeRM24oonRf4sGS-BIsWXCsG8fTyaYzfJajIv7xh-ibK5NYtp2fji4W1l9ErKyfMX8bh27B5TnSOPjKZQydo4bqRnpK6IeiSCKmhbi195Yzzzns9h3Zs0edCV70UnEnFPO23gHIM2tSjkk_HNUitc8rR3ErYXKQx_p3t4RyAYcP8dbqi0RdepDBYoyR8LtFpfF63PYKKSk9SD5ePpqcqyqfHDibuL_Onmn0q14sF5TkXmnFLrj15Bxx4dgJV6BwTwbc3n_I-y5unOB6nbSR2PwINbsueSx7hjmebMPzZJqUwCGeehUnvGvt5vMbMY1ofYglw1HxryhcCvgdo</con:value>
    </con:property>
    <con:property>
      <con:name>accessTime</con:name>
      <con:value>08:56 PM</con:value>
    </con:property>
    <con:property>
      <con:name>DueTime</con:name>
      <con:value>12:56 AM</con:value>
    </con:property>
    <con:property>
      <con:name>AllBatchAsignmnetData</con:name>
      <con:value>{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "BASIC_TYPE"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":0,"assetVersion":"1.0.0","assetCode":"CP4_HTML_614183a5e71cd","resourceTypeName":"Skill Overview","isGraded":false,"assetId":"326759","assetType":"asset","isAssigned":true,"resourceTypeId":"00509e76-f348-11ea-972b-0242ac1d0003","name":"Surgical Scenario 4: Vernon Watkins :Suggested Readings"},{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "QUIZ"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":100,"assetVersion":"1.0.0","assetCode":"CP4_QuizManager_616f3b6c9b02e","resourceTypeName":"Quiz","isGraded":true,"assetId":"342120","assetType":"asset","isAssigned":true,"resourceTypeId":"0e68a14f-f348-11ea-972b-0242ac1d0003","name":"Surgical Scenario 4: Vernon Watkins :Pre-Simulation Quiz"},{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "ENHANCED_VSIM"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":100,"assetVersion":"2.0.0","assetCode":"CP4_VSIM_61b0d3f61e263","resourceTypeName":"Next-Gen vSim","isGraded":true,"assetId":"342350","assetType":"asset","isAssigned":true,"resourceTypeId":"6a233f72-890e-487c-9283-33b03dca5f21","name":"Surgical Scenario 4: Vernon Watkins :vSim"},{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "QUIZ"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":100,"assetVersion":"1.0.0","assetCode":"CP4_QuizManager_61794d3917179","resourceTypeName":"Quiz","isGraded":true,"assetId":"342178","assetType":"asset","isAssigned":true,"resourceTypeId":"0e68a14f-f348-11ea-972b-0242ac1d0003","name":"Surgical Scenario 4: Vernon Watkins :Post-Simulation Quiz"},{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "BASIC_TYPE"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":0,"assetVersion":"5.0.0","assetCode":"CP4_HTML_5bffea9d158b8","resourceTypeName":"Skill Overview","isGraded":false,"assetId":"3256","assetType":"asset","isAssigned":true,"resourceTypeId":"00509e76-f348-11ea-972b-0242ac1d0003","name":"Surgical Scenario 4: Vernon Watkins :Documentation Assignments: Vernon Watkins"},{
	 "attemptType": "Highest Grade",
      "assignmentType": 
      {
        "type": "BASIC_TYPE"
      },
      "submissionCount": null,
      "sections": [
        {
          "sectionCode": [
            "*"
            
          ],
          "dueDate": "2023-05-09",
          "dueDateTime": "12:56 AM",
          "dueDateTimezone": "Asia/Kolkata",
          "accessibleFrom": "2023-05-08T08:56:44+05:30",
          "accessibleFromTimezone": "Asia/Kolkata",
          "isForEveryOne": true,
          "isImmediateAvailable":true ,
          "isUnlocked": true
        }
      ],"points":0,"assetVersion":"5.0.0","assetCode":"CP4_HTML_5c01be2685b81","resourceTypeName":"Skill Overview","isGraded":false,"assetId":"3706","assetType":"asset","isAssigned":true,"resourceTypeId":"00509e76-f348-11ea-972b-0242ac1d0003","name":"Surgical Scenario 4: Vernon Watkins :Guided Reflection Questions: Vernon Watkins"}</con:value>
    </con:property>
    <con:property>
      <con:name>batchAssignmentName</con:name>
      <con:value>Surgical Scenario 4: Vernon Watkins</con:value>
    </con:property>
    <con:property>
      <con:name>ChildAssertsCount</con:name>
      <con:value>6</con:value>
    </con:property>
    <con:property>
      <con:name>ChildAssertIndexCount</con:name>
      <con:value>5</con:value>
    </con:property>
    <con:property>
      <con:name>skillId</con:name>
      <con:value>PHX_COL_616f04096a5c8</con:value>
    </con:property>
    <con:property>
      <con:name>MapedActivityIDs</con:name>
      <con:value>["CP4_QuizManager_616f3b6c9b02e", "CP4_VSIM_61b0d3f61e263", "CP4_QuizManager_61794d3917179"]</con:value>
    </con:property>
    <con:property>
      <con:name>MapedAssertTypes</con:name>
      <con:value>["Quiz", "ENHANCED_VSIM", "Quiz"]</con:value>
    </con:property>
    <con:property>
      <con:name>MapedAssertIds</con:name>
      <con:value>["342120", "342350", "342178"]</con:value>
    </con:property>
    <con:property>
      <con:name>GradedAssertCount</con:name>
      <con:value>3</con:value>
    </con:property>
    <con:property>
      <con:name>startAt</con:name>
      <con:value>2023-05-08T17:11:11.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>completedAt</con:name>
      <con:value>2023-05-08T17:14:14.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>sentAt</con:name>
      <con:value>2023-05-08T17:15:15.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>GetBatchDetails</con:name>
      <con:value>60000</con:value>
    </con:property>
    <con:property>
      <con:name>DefultPushDealy</con:name>
      <con:value>3000</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
