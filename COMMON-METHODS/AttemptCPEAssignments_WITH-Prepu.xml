<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" id="c176387a-a004-4893-a839-30608d68cbb1" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="AttemptCPEAssignments_WITH Prepu" searchProperties="true" timeout="0">
  <con:settings id="fb571ad8-39cd-48c4-8adb-1807cee2e75c">
    <con:setting id="GeneratableJUnitReport@Folder">D:\Ready APi Daily Data\March30\Issue</con:setting>
    <con:setting id="c176387a-a004-4893-a839-30608d68cbb1fileName">AttemptCPEAssignments_WITH-Prepu</con:setting>
  </con:settings>
  <con:testStep type="delay" name="Delay" id="c22f5914-f210-4853-a1ca-5dd41b575492" disabled="true">
    <con:settings/>
    <con:config>
      <delay>120000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="TestDataDataSuource" id="9d5e7d06-9dc0-4631-a8c0-57a338bd1009">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>CreateCourse</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>true</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Number</con:property>
      <con:property>sectionName</con:property>
      <con:property>programTypeId</con:property>
      <con:property>timeZoneId</con:property>
      <con:property>academicTerm</con:property>
      <con:property>academicYear</con:property>
      <con:property>sfdcAccountId</con:property>
      <con:property>products</con:property>
      <con:property>instructor</con:property>
      <con:property>Products2</con:property>
      <con:property>user</con:property>
      <con:property>Env</con:property>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Groovy Script" id="d4570f82-c3b2-49cb-b7c5-be846c475d52">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import com.eviware.soapui.model.testsuite.TestRunner.Status
import groovy.json.JsonOutput
import groovy.json.*


testRunner.testCase.setPropertyValue("Loop", "0")</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Change Score and Assignment" id="65f25fcd-0184-4cc1-a10c-c125a0dda830">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>PerfomaceData_Itrations</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Score</con:property>
      <con:property>assignmentNumber</con:property>
      <con:startRow/>
      <con:endRow>${#Project#CourseAssignmentCount}</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Set Score" id="494340e2-0cc8-4a60-8877-63ff544ffa1f">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;


def score = context.expand( '${Change Score and Assignment#Score}' )
def assignmentNumber = context.expand( '${Change Score and Assignment#assignmentNumber}' )


log.info(score)
log.info(assignmentNumber)
testRunner.testCase.testSuite.project.setPropertyValue("AttemptScore", score)
testRunner.testCase.testSuite.project.setPropertyValue("AssignmnetIndex", assignmentNumber)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay 2" id="59d76542-6323-4db2-bae5-5f862b8e1869" disabled="true">
    <con:settings/>
    <con:config>
      <delay>1000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Get Assignmnet Type" id="48f23af1-6ab0-41af-a6c0-fbd5d0df7d07">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>AllAssignmentsData</worksheet>
          <cell>A29</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:preload>true</con:preload>
      <con:property>number</con:property>
      <con:property>AssignmentType</con:property>
      <con:property>AttemptBodyData</con:property>
      <con:property>DetailsMapedName</con:property>
      <con:startRow/>
      <con:endRow>5</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet  Start and End Time" id="63b67ee2-b604-4330-9c94-a0404ac5fdd0">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat


def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )

log.info("hv "+attemptBodyData)
if(!(attemptBodyData.toString().equals("")))
{

def loop = context.expand( '${#TestCase#Loop}' )
def loop1234 = loop as int 
log.info("before "+loop1234)
	log.info("before 34343 "+loop1234)
	testRunner.testCase.setPropertyValue("Loop", (loop1234+1).toString())
 loop1234 = context.expand( '${#TestCase#Loop}' )

log.info("After "+loop1234)
}

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-6000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="AttemptCommonPushBody" id="29c7f516-f572-45cb-bc96-66a0670b85a1">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="AttemptCommonPushBody" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>"startedAt": "${#TestCase#startAt}",
 "completedAt": "${#TestCase#completedAt}",
 "sentAt": "${#TestCase#sentAt}",
"userId": "${#Project#StudentUserId}",
"systemId": "${#Project#SystemId}",
"activityId": "D_activityId",
 "correlationId": "D_correlationId",
 "score": "D_score", 
  "classIds": [
        "${#Project#JoinedSectionid}"
    ]
	
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Arrange Attempt Body Data" id="2fbe7e39-1698-4a9b-841e-44d329083f73">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import com.eviware.soapui.model.testsuite.TestRunner.Status
import groovy.json.JsonOutput
import groovy.json.*



def rawRequest = context.expand( '${AttemptCommonPushBody#RawRequest}' )
def rawRequestData = rawRequest

//log.info(rawRequestData)
testRunner.testCase.testSuite.setPropertyValue("Attempt_BodyData","")
def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )
//log.info(attemptBodyData)

def number = context.expand( '${Get Assignmnet Type#number}' )
def assignmentType = context.expand( '${Get Assignmnet Type#AssignmentType}' )
//def resourceTypeId = context.expand( '${Get Assignmnet Type#resourceTypeId}' )
def detailsMapedName = context.expand( '${Get Assignmnet Type#DetailsMapedName}' )

def resourceTypeLableName = detailsMapedName
log.info("Type = "+resourceTypeLableName)
//resourceTypeLableName ="Interactive Tutorials"
//def assignmnetIndex = context.expand( '${#TestSuite#AssignmnetIndex}' )
def assignmnetIndex = context.expand( '${#Project#AssignmnetIndex}' )

def assignmentNumber = assignmnetIndex
log.info("assignmentNumber "+assignmentNumber)

def AssignmentNames = ""
def PublishedVersions =""
def ExternalAssetIds = ""
def Actvityids = ""

if(assignmentType.contains("Skills_"))
{
	log.info("I am Skills ")
AssignmentNames = "\${#TestSuite#Skills_"+resourceTypeLableName+"AssignmentNames#\$["+assignmentNumber+"]}"
 PublishedVersions = "\${#TestSuite#Skills_"+resourceTypeLableName+"PublishedVersions#\$["+assignmentNumber+"]}"
 ExternalAssetIds = "\${#TestSuite#Skills_"+resourceTypeLableName+"ExternalAssetIds#\$["+assignmentNumber+"]}"
 Actvityids = "\${#TestSuite#Skills_"+resourceTypeLableName+"Actvityids#\$["+assignmentNumber+"]}"
}
else
{
	log.info("I am CPE ")
 AssignmentNames = "\${#TestSuite#CCM2_"+resourceTypeLableName+"AssignmentNames#\$["+assignmentNumber+"]}"
 PublishedVersions = "\${#TestSuite#CCM2_"+resourceTypeLableName+"PublishedVersions#\$["+assignmentNumber+"]}"
 ExternalAssetIds = "\${#TestSuite#CCM2_"+resourceTypeLableName+"ExternalAssetIds#\$["+assignmentNumber+"]}"
 Actvityids = "\${#TestSuite#CCM2_"+resourceTypeLableName+"Actvityids#\$["+assignmentNumber+"]}"
}
def cCM2_AssignmentNames = context.expand( AssignmentNames )
def cCM2_PublishedVersions = context.expand(PublishedVersions)
def cCM2_ExternalAssetIds = context.expand( ExternalAssetIds )
def cCM2_Actvityids = context.expand( Actvityids )

def name =""
def assetId=""
def version=""
def type=""
def typeId=""


name=cCM2_AssignmentNames
assetId=cCM2_ExternalAssetIds
version = cCM2_PublishedVersions
type=assignmentType
//typeId=resourceTypeId
def tempData = rawRequestData
tempData=tempData.replace("D_activityId",cCM2_Actvityids)


def attemptScore = context.expand( '${#Project#AttemptScore}' )
//def attemptScore = score1234
log.info("score "+attemptScore)

if(attemptBodyData.toString().contains("Achievement"))
{
   tempData=tempData.replace("D_score","1")
   log.info("I am Video")
}
else
{
	log.info("I am Scored")
	tempData=tempData.replace("D_score",attemptScore)
}
//==================

attemptBodyData = attemptBodyData.replace("D_AssertId",assetId)

log.info("name :"+cCM2_AssignmentNames+"assert id := "+cCM2_ExternalAssetIds+"version := "+cCM2_PublishedVersions+"ActivityId := "+cCM2_Actvityids)

def finalPushBody= attemptBodyData+tempData
//def bodyData=rawRequestData.toString().replace("D_name",name).replace("D_assetId",assetId).replace("D_assetVersion",version).replace("D_type",type).replace("D_resourceTypeId",typeId)
def collectionId_List = context.expand( '${#TestSuite#collectionId_List}' )

def idssss = collectionId_List.split("#")
def loop = context.expand( '${#TestCase#Loop}' )

log.info("ids "+idssss)
def i = loop as int
i = i-1
log.info("loop Index "+i)
log.info("dbd "+i+" = "+idssss[i])

def colId= idssss[i]
log.info("col id "+colId)

finalPushBody = finalPushBody.replace("D_correlationId",colId.toString())
log.info("final body = "+finalPushBody)

testRunner.testCase.testSuite.setPropertyValue("Attempt_BodyData",finalPushBody)
log.info("Assert id = "+assetId)
testRunner.testCase.setPropertyValue("Assertid",assetId)</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Push to SQS" id="b54ba829-141b-4ff2-9611-d6b0d1cc45db">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Push to SQS" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>${#TestSuite#Attempt_BodyData}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes" disabled="true">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="78cd09dc-2a8a-4a7b-86db-4af23e0edc94" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def testCase = messageExchange.modelItem.testCase;
def rawRequest = context.expand( '${Push to SQS#RawRequest#$[\'activityId\']}' )

def response = context.expand( '${Push to SQS#Response#$[\'code\']}' )


if(rawRequest.toString()=="")
{
	
	assert response.toString()=="400"
	testCase.setPropertyValue("StatusCode","400")
}
else
{
	assert response.toString()==""
	testCase.setPropertyValue("StatusCode","200")
}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Push" id="73e8208e-a07f-419e-b4cb-2f6b68719108">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Student" id="3f63a0b1-e52f-4822-9325-175c425d2d20">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Student" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestSuite#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes" disabled="true">
          <con:settings/>
          <con:configuration>
            <codes>${#TestCase#StatusCode}</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()


def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName !=null


assert submissionHistory.score.toString() == PushSQSrequest.score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e1a4dfe4-7dec-420a-ab9b-0552cec02e23" name="Match content of [assetId]" disabled="true">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#Assertid}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#Assertid}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Instructor" id="00ce1593-7478-4456-863a-988c9e29b0c8">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Instructor" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestSuite#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes" disabled="true">
          <con:settings/>
          <con:configuration>
            <codes>${#TestCase#StatusCode}</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59cc1a12-5ea2-49c5-b2ee-bdb01eeccdf4" name="Match content of [assetId]" disabled="true">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#Assertid}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

 
def systemId = context.expand( '${#Project#SystemId}' )

assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()


def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
log.info(value)

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id


assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName !=null


assert submissionHistory.score.toString() == PushSQSrequest.score
assert submissionHistory.percentage.toString() ==PushSQSrequest.score


assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true

//assert Getrespon.submissionHistory[0].submissionId !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#Assertid}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop" id="d037374f-3a1a-44ff-b23f-a6dc7c82a08a">
    <con:settings/>
    <con:config>
      <dataSourceStep>Get Assignmnet Type</dataSourceStep>
      <targetStep>Generate Assignmnet  Start and End Time</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop Score" id="8eb47e6c-6c3d-4891-afa3-810bcb454a23">
    <con:settings/>
    <con:config>
      <dataSourceStep>Change Score and Assignment</dataSourceStep>
      <targetStep>Set Score</targetStep>
      <discardResults>false</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay 3" id="8763fe63-a150-47aa-b2af-6a775ac32a2e">
    <con:settings/>
    <con:config>
      <delay>30000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify assignment in assignment page student end" id="0761cdbf-8d1b-41aa-9988-0a5d23f3d70f">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Get Assignment details for a course" resourcePath="/api/phx-batch-assignment-management/v1/assignment-wrapper/assignments" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify assignment in assignment page student end" id="6a7147c8-565f-4a5c-a43b-0c9a777113fa" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#Project#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/phx-batch-assignment-management/v1/assignment-wrapper/assignments</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="827e4ffe-b779-4222-8989-880a3852bf5f" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="0078357b-7802-47be-b007-b8f594b0de08" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="a4b781fa-fc6e-4e81-af6b-0cf5c7fc8628" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;


def rawRequest = context.expand( '${Create Assignment#RawRequest}' )
def resp = context.expand( '${Verify assignment in assignment page student end#Response}' )
def response2 = context.expand( '${Create Assignment#Response}' )


def request = new JsonSlurper().parseText(rawRequest)
def responseData = new JsonSlurper().parseText(resp)
def response222 = new JsonSlurper().parseText(response2)
 def isAssignmnetExisted =false
for(def response in responseData )
{
	
	if(request.name == response.name)
	{
		isAssignmnetExisted=true

		log.info("Existed")
assert request.name == response.name
assert request.points == response.points
assert request.assets.assetId==response.assets.assetId
assert request.assets.assetVersion==response.assets.assetVersion
assert request.assets.assetType==response.assets.assetType
assert request.isGraded==response.isGraded
assert request.submissionCount==null


assert request.isHighlightLateSubmission==response.isHighlightLateSubmission
assert request.sections.sectionCode==response.sections.sectionCode
assert request.sections.dueDate==response.sections.dueDateTime
assert request.sections.dueDateTime==response.sections.dueTime
assert request.sections.dueDateTimezone==response.sections.dueDateTimezone
assert request.sections.accessibleFromTimezone==response.sections.accessibleFromTimezone
assert request.sections.isForEveryOne!=null
assert request.sections.isImmediateAvailable==response.sections.isImmediateAvailable
assert request.sections.isUnlocked==response.sections.isUnlocked

assert request.maxAttempts==response.maxAttempts
assert request.attemptType==response.attemptType
assert request.name == response.assignmentTitle
assert request.assignmentType.type ==response.assignmentType.type  
//assert response.assetCode !=null
 assert response.productIsbn ==request.productIsbn
 assert response.courseId ==request.courseId
 assert response.consumer == response222.consumer
 assert response.createdBy ==response222.createdBy
 assert response.createdAt != null
assert response.flattenedSections.size()==1
assert  response.sections.sectionCode.size()==1
break
	}

}
assert isAssignmnetExisted





/*
assert request.name == response.name[0]
assert request.points == response.points[0]
assert request.assets.assetId==response.assets.assetId[0]
assert request.isGraded==response.isGraded[0]

assert request.isHighlightLateSubmission==response.isHighlightLateSubmission[0]
assert request.sections.sectionCode[]==response.sections.sectionCode[]
assert request.sections.dueDate==response.sections.dueDateTime[0]
assert request.sections.dueDateTime==response.sections.dueTime[0]
assert request.sections.dueDateTimezone==response.sections.dueDateTimezone[0]
assert request.sections.accessibleFromTimezone==response.sections.accessibleFromTimezone[0]
assert request.sections.isForEveryOne==response.sections.isForEveryOne[0]
assert request.sections.isImmediateAvailable==response.sections.isImmediateAvailable[0]
assert request.sections.isUnlocked==response.sections.isUnlocked[0]

assert request.maxAttempts==response.maxAttempts[0]
assert request.attemptType==response.attemptType[0]
assert request.name == response.assignmentTitle[0]
assert response.flattenedSections[0].size()==1
assert  response.sections[0].sectionCode[0].size==1
*/</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="course" value="${#TestSuite#CourseId}"/>
          <con:entry key="group" value="due-in-7-days "/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>course</con:entry>
          <con:entry>mergeBatch</con:entry>
          <con:entry>group</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="PrePuSetUp" id="53236d4a-2fea-4b11-9abe-d23226685e04">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper
import java.lang.*;


//def rawRequest = context.expand( '${Create Assignment#RawRequest}' )
def resp = context.expand( '${Verify assignment in assignment page student end#Response}' )
//def response2 = context.expand( '${Create Assignment#Response}' )


//def request = new JsonSlurper().parseText(rawRequest)
def responseData = new JsonSlurper().parseText(resp)
//def response222 = new JsonSlurper().parseText(response2)

//log.info(responseData)

   
  def PrepuExternalPrepuId=[]
def PrepuTargetMasteryLevel=[]
def PrepuName=[]
def PrepuexternalAssetId=[]
for(def eachAsset in responseData)
{
	//log.info("sdf "+eachAsset.resourceTypeName.toString().toLowerCase())
	if(eachAsset.resourceTypeName.toString().toLowerCase().contains("prepu"))
	{
              	//log.info(eachAsset.prepuDetails.targetMasteryLevel[0].toString())
	             PrepuName.add("\""+eachAsset.name.toString()+"\"")
	            PrepuExternalPrepuId.add("\""+eachAsset.prepuDetails.externalPrepuId[0].toString()+"\"")
	            PrepuTargetMasteryLevel.add("\""+eachAsset.prepuDetails.targetMasteryLevel[0].toString()+"\"")
	           PrepuexternalAssetId.add("\""+eachAsset.externalAssetId.toString()+"\"")
	}
	
}

log.info("PrepuExternalPrepuId "+PrepuExternalPrepuId)
log.info("PrepuTargetMasteryLevel "+PrepuTargetMasteryLevel)
log.info("PrepuName "+PrepuName)
log.info("PrepuName "+PrepuexternalAssetId)
testRunner.testCase.setPropertyValue("PrePuCutOff", (PrepuExternalPrepuId.size()-1).toString())
testRunner.testCase.setPropertyValue("PrepuExternalPrepuId", PrepuExternalPrepuId.toString())
testRunner.testCase.setPropertyValue("PrepuTargetMasteryLevel", PrepuTargetMasteryLevel.toString())
testRunner.testCase.setPropertyValue("PrepuName", PrepuName.toString())
testRunner.testCase.setPropertyValue("PrepuexternalAssetId", PrepuexternalAssetId.toString())</script>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="Data Source" id="4fb2db51-83e0-4561-93f1-5fe7557f7e65">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Excel">
        <con:configuration>
          <file>${#Project#TestDataExcelFile}</file>
          <worksheet>loop</worksheet>
          <cell>A2</cell>
          <ignoreEmpty>false</ignoreEmpty>
          <evaluateFormulas>false</evaluateFormulas>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>Itrations</con:property>
      <con:property>Score</con:property>
      <con:startRow/>
      <con:endRow>${#TestCase#PrePuCutOff}</con:endRow>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>false</con:completeLastOperation>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Generate Assignmnet Push Date And Time" id="19756995-d29d-46d5-aab2-343212794de0">
    <con:settings/>
    <con:config>
      <script>import java.lang.*;
import java.util.Date
import java.util.Calendar
import java.util.TimeZone
import java.text.SimpleDateFormat

/*
def attemptBodyData = context.expand( '${Get Assignmnet Type#AttemptBodyData}' )

log.info("hv "+attemptBodyData)
if(!(attemptBodyData.toString().equals("")))
{

def loop = context.expand( '${#TestCase#Loop}' )
def loop1234 = loop as int 
log.info("before "+loop1234)
	log.info("before 34343 "+loop1234)
	testRunner.testCase.setPropertyValue("Loop", (loop1234+1).toString())
 loop1234 = context.expand( '${#TestCase#Loop}' )

log.info("After "+loop1234)
}

*/
Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
//"sentAt": "2023-04-13T07:55:29.504Z",
def accessibleFromTimezone= "UTC"

//MM-dd-yyyy HH:mm:ss 
//SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
//SimpleDateFormat Time1= new SimpleDateFormat("hh:mm:m")

SimpleDateFormat Date1 = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat Time1= new SimpleDateFormat("HH:mm:m")
//2023-04-04T11:51:14.9780634Z
Date1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
Time1.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));


def assignmnetDueTime_MS = context.expand( '${#TestSuite#AssignmnetDueTime_MS}' ) as int

def AttemptTimeLimit = 0
//AttemptTimeLimit=240000

log.info(AttemptTimeLimit)

def DueDateData= Date1.format(currentDatePlusOne)

def DueTimeData= Time1.format(new Date(new Date().getTime()-60000))

def comAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+120000))
def senAt= Time1.format(new Date(new Date().getTime()+AttemptTimeLimit+180000))

/*
def startAt = DueDateData+"T"+DueTimeData+".866Z"
def completedAt = DueDateData+"T"+comAt+".866Z"
def sentAt = DueDateData+"T"+senAt+".866Z"
*/
def startAt = DueDateData+"T"+DueTimeData+".605Z"
def completedAt = DueDateData+"T"+comAt+".605Z"
def sentAt = DueDateData+"T"+senAt+".605Z"
//log.info("startAt = "+startAt)

log.info("startAt = "+startAt)
log.info("completedAt = "+completedAt)
log.info("sentAt = "+sentAt)

testRunner.testCase.setPropertyValue("startAt", startAt)
testRunner.testCase.setPropertyValue("completedAt", completedAt)
testRunner.testCase.setPropertyValue("sentAt", sentAt)





/*
def dueTime = context.expand( '${#TestCase#DueTime}' )
def dueDate = context.expand( '${#TestCase#DueDate}' )

def accessDate = context.expand( '${#TestCase#accessDate}' )
def accessTime = context.expand( '${#TestCase#accessTime}' )

def accessibleFromTimezone = context.expand( '${CreateAssignment#accessibleFromTimezone}' )
def timeZoneOffset = context.expand( '${CreateAssignment#timeZoneOffset}' )
def isImmediateAvailable = context.expand( '${CreateAssignment#isImmediateAvailable}' )
//isImmediateAvailable=true
log.info("accessibleFromTimezone : "+accessibleFromTimezone)
log.info("timeZoneOffset : "+timeZoneOffset)
log.info("isImmediateAvailable : "+isImmediateAvailable)

def now= new Date()

Calendar cal = Calendar.getInstance();
Date today = new Date();
cal.setTime(today);
//cal.add(Calendar.DATE, 1)
Date currentDatePlusOne = cal.getTime();
SimpleDateFormat currentDatePlusOn = new SimpleDateFormat("yyyy-MM-dd")
SimpleDateFormat duteTimePlus = new SimpleDateFormat("hh:mm a")

currentDatePlusOn.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
duteTimePlus.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def DueDateData= currentDatePlusOn.format(currentDatePlusOne)
def DueTimeData= duteTimePlus.format(new Date(now.getTime()+120000))

if(isImmediateAvailable.toString() == "true")
{
	log.info("true")
SimpleDateFormat DateAndtimee = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime = new SimpleDateFormat("hh:mm a")

DateAndtimee.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def CurrentDateandTime= DateAndtimee.format(new Date(now.getTime()+120000))
def CurrentTimeBeforeAdd= JustTime.format(new Date())
def CurrentTimeAfterAddg= JustTime.format(new Date(now.getTime()+120000))
def accesDate = CurrentDateandTime+timeZoneOffset
def accesTime = CurrentTimeAfterAddg

 accessDate = accesDate
 accessTime = accesTime
log.info("accesDateTime= "+accesDate)
log.info("CurrentTimeBeforeAdd= "+CurrentTimeBeforeAdd)	
log.info("CurrentTimeAfterAddg "+CurrentTimeAfterAddg)	

}
else
{
		log.info("false")
Calendar cal2 = Calendar.getInstance();
Date today2 = new Date();
cal2.setTime(today);
cal2.add(Calendar.DATE, 10)
Date currentDatePlusOne2 = cal2.getTime();
SimpleDateFormat currentDatePlusOn2 = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss")
SimpleDateFormat JustTime2 = new SimpleDateFormat("hh:mm a")

currentDatePlusOn2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));
JustTime2.setTimeZone(TimeZone.getTimeZone(accessibleFromTimezone));

def futuredate2= currentDatePlusOn2.format(currentDatePlusOne2)
def futureTime2= JustTime2.format(currentDatePlusOne2)
accessDate = futuredate2+timeZoneOffset
 accessTime = futureTime2
//log.info("hgfgfhgf"+futuredate2)
}
log.info("DueDate =" +DueDateData +" and Time = "+ DueTimeData)
log.info("accessDate =" +accessDate +" and Time = "+ accessTime)

testRunner.testCase.setPropertyValue("dueDate", DueDateData)
testRunner.testCase.setPropertyValue("dueTime", DueTimeData)
testRunner.testCase.setPropertyValue("accessDate", accessDate)
testRunner.testCase.setPropertyValue("accessTime", accessTime)


*/</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Push to SQS 2" id="5b950565-2c53-4c0f-8eb1-470750c04437">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="pushSQS" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/pushSqsQueue" xsi:type="con:RestRequestStep">
      <con:restRequest name="Push to SQS 2" id="0356f71d-de87-4d0e-8c1b-3c08512d544b" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request>{
    "id": "1537254803",
    "meta": {
        "points": "100"
    },
    "type": "Achievement",
    "score": "1",
    "sentAt": "${#TestCase#sentAt}",
    "userId": "${#Project#StudentUserId}",
    "quizzes": [
        {
            "id": ${#TestCase#PrepuExternalPrepuId#$[${Data Source#Itrations}]},
            "name": "${#TestCase#PrepuName#$[${Data Source#Itrations}]}",
            "questionsAnswered": 5
        }
    ],
    "classIds": [
        "${#Project#JoinedSectionid}"
    ],
    "systemId": "${#Project#SystemId}",
    "sectionId": "mastery_level",
    "startedAt": "${#TestCase#startAt}",
    "activityId": "${#TestCase#PrepuExternalPrepuId#$[${Data Source#Itrations}]}",
    "completedAt": "${#TestCase#completedAt}",
    "sectionName": "Mastery Level Assignments",
    "activityName": "${#TestCase#PrepuName#$[${Data Source#Itrations}]}",
    "masteryLevel": ${#TestCase#PrepuTargetMasteryLevel#$[${Data Source#Itrations}]},
    "quizzesTaken": 1,
    "correlationId": ${#TestCase#PrepuExternalPrepuId#$[${Data Source#Itrations}]}

    
}</con:request>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/pushSqsQueue</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="26163957-cf3c-4bf9-9928-2bef78e226f8" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="a9854fe8-1173-41fd-83b1-cb912fb39936" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next push" id="6acf50d4-2d31-45b3-a72d-680018b096ed">
    <con:settings/>
    <con:config>
      <delay>${#TestSuite#pushDealy}</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Student 2" id="c59aa5d0-95e4-4183-825c-e04334458665">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Student 2" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestSuite#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="f5116360-55f9-4401-a0e5-6e0cb94b41e7" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Student#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

def systemId = context.expand( '${#Project#SystemId}' )

assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()


def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id

assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName !=null


assert submissionHistory.score.toString() == PushSQSrequest.score

assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e1a4dfe4-7dec-420a-ab9b-0552cec02e23" name="Match content of [assetId]" disabled="true">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#Assertid}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS 2#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#PrepuexternalAssetId#$[${Data Source#Itrations}]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify Submission History Instructor 2" id="e0f12ecb-a70b-4f07-a43e-9aed028dd2a1">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="Submission History student /Instructor" methodName="Method 1" resourcePath="/api/gradebook-process-management/v1/submissionHistory/student/{Student id}" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify Submission History Instructor 2" id="8f92f9e1-70bf-4dd2-82de-9338691f6432" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${#TestSuite#CourseEnrollmentToken}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoInstructor}" value="${#Project#ssoInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenInstructor}" value="${#Project#xaccessTokenInstructor}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://contentqa01-ccm.hlrpphoenix.com/api/gradebook-process-management/v1/submissionHistory/student/398ccfc3-203f-47af-94e3-4474015c2b1f</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="08ce3de9-602a-4e2d-b1c4-8bb67fc9f105" name="Valid HTTP Status Codes" disabled="true">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="5a76f898-017c-4d31-b87c-f4257f5de080" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59cc1a12-5ea2-49c5-b2ee-bdb01eeccdf4" name="Match content of [assetId]" disabled="true">
          <con:configuration>
            <path>$['data'][0]['assetId']</path>
            <content>${#TestCase#Assertid}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="d728b3c9-027d-4095-ad89-9ed4ea6edbc3" name="Script Assertion" disabled="true">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def rawRequest = context.expand( '${Push to SQS#RawRequest}' )

def response = context.expand( '${Verify Submission History Instructor#Response}' )


def response2 = context.expand( '${Update Assignment#Response}' )


def PushSQSrequest = new JsonSlurper().parseText(rawRequest)
def Getresponse = new JsonSlurper().parseText(response)
def Assignment = new JsonSlurper().parseText(response2)

 
def systemId = context.expand( '${#Project#SystemId}' )

assert Getresponse.data.assetId[0] == Assignment.assets.assetId.toString()


def itrations = context.expand( '${Data Source#Itrations}' )
def value  = itrations as int
log.info(value)

def submissionHistory =Getresponse.data[0].submissionHistory[value]

assert submissionHistory.submissionId ==PushSQSrequest.id


assert submissionHistory.id !=null
assert submissionHistory.systemId==systemId
assert submissionHistory.classId ==PushSQSrequest.classIds[0]
assert submissionHistory.userId ==PushSQSrequest.userId
assert submissionHistory.activityId ==PushSQSrequest.activityId
assert submissionHistory.activityName !=null


assert submissionHistory.score.toString() == PushSQSrequest.score
assert submissionHistory.percentage.toString() ==PushSQSrequest.score


assert submissionHistory.type ==PushSQSrequest.type
assert submissionHistory.metaData !=null

assert submissionHistory.status=="grade-process-completed"
assert submissionHistory.startAt  !=null
assert submissionHistory.completedAt !=null
assert submissionHistory.sentAt  !=null
assert submissionHistory.reportData != null

assert submissionHistory.isGraded == true

//assert Getrespon.submissionHistory[0].submissionId !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="classId" value="${Push to SQS 2#RawRequest#$['classIds'][0]}"/>
          <con:entry key="assetId" value="${#TestCase#PrepuexternalAssetId#$[${Data Source#Itrations}]}"/>
          <con:entry key="Student id" value="${#Project#StudentUserId}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop Pre pu" id="2030a007-6989-4e82-8367-254c201e4b09">
    <con:settings/>
    <con:config>
      <dataSourceStep>Data Source</dataSourceStep>
      <targetStep>Generate Assignmnet Push Date And Time</targetStep>
      <discardResults>true</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Verify final Student Grades After Attempt" id="52c24b72-3f9f-4f5f-b02c-ec0a6c45469f">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" service="GetAssignedGrades" resourcePath="/api/phx-gradebook-management/v1/ccm/course/{courseId}/section/{sectionId}/grades" methodName="Method 1" xsi:type="con:RestRequestStep">
      <con:restRequest name="Verify final Student Grades After Attempt" id="17b947f0-bc28-40d6-a2c7-1f869e08db62" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="x-enrollment-token" value="${Create course#Response#$['enrollmentToken']}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_xaccessTokenStudent}" value="${#Project#xaccessTokenStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="${#Project#Key_ssoStudent}" value="${#Project#ssoStudent}" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:endpoint xsi:nil="true"/>
        <con:request/>
        <con:originalUri>https://dev01-ccm.hlrpphoenix.com/api/phx-gradebook-management/v1/ccm/course/gM3MIFVPW5L/section/gM3MIFVPW5L_sM3MIFVRAQ1/grades</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="44745bfe-b054-4b69-a903-ea70d658d185" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Response SLA Assertion" id="0130b747-8cc6-4c76-beed-706840b09912" name="Response SLA">
          <con:configuration>
            <SLA>${SLA}</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="cd25367b-d27a-4728-82bf-427dbeb77588">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper
import java.lang.*;

def testCase = messageExchange.modelItem.testCase;
def response = context.expand( '${Verify final Student Grades After Attempt#Response}' )

def Getresponse = new JsonSlurper().parseText(response)

log.info(Getresponse.grades.assetDetails.attemptDetails.displayScoreLabel.size())

//Getresponse.grades.assetDetails

int count =0
for(def eachAssert in Getresponse.grades)
{
	//og.info(eachAssert.assetDetails.attemptDetails[0].displayScoreLabel[0].toString())
	
  if(eachAssert.assetDetails.attemptDetails[0].displayScoreLabel[0].toString()!=null)
  {
  	count++
  }
}

log.info("Submitted Assets "+count)
testCase.setPropertyValue("SubmittedAssignmentsCount",(count).toString())

def totalAssignments = context.expand( '${#Project#TotalAssignments}' )as int 
totalAssignments = totalAssignments/2

assert totalAssignments&lt;=count</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="studentId" value="${#Project#StudentUserId}"/>
          <con:entry key="sectionId" value="${#Project#JoinedSectionid}"/>
          <con:entry key="courseId" value="${#TestSuite#CourseId}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>courseId</con:entry>
          <con:entry>sectionId</con:entry>
          <con:entry>studentId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="5fdd3302-0f5d-4e97-86ac-499553156130">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="91a6eeff-dd67-4af8-98fd-225fe8ca80e2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="84a8c881-bb29-487a-93b8-3f2e674fb825">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>accessDate</con:name>
      <con:value>2023-04-18T06:11:52-05:00</con:value>
    </con:property>
    <con:property>
      <con:name>DueDate</con:name>
      <con:value>2023-04-18</con:value>
    </con:property>
    <con:property>
      <con:name>EffectiveDate</con:name>
      <con:value>2023-04-18T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>ExpireDate</con:name>
      <con:value>2023-05-18T00:00:00.000Z</con:value>
    </con:property>
    <con:property>
      <con:name>tomorrow</con:name>
      <con:value>Tue, Apr 18 2023</con:value>
    </con:property>
    <con:property>
      <con:name>tomorrow2</con:name>
      <con:value>2023-04-18</con:value>
    </con:property>
    <con:property>
      <con:name>instructorUserId</con:name>
      <con:value>0345b785-ba3e-4b3a-9c6c-447101694d75</con:value>
    </con:property>
    <con:property>
      <con:name>numberOfAttempts</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:property>
      <con:name>StudentenrollmentToken</con:name>
      <con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODE4ODU5NjAsImp0aSI6IjAxZDNiYzFlLWJlMzMtNGNjOS04OGU3LWI4ZTcxMjMzNTNhNSIsImlhdCI6MTY4MTcxMzE2MCwiaXNzIjoiaHR0cHM6Ly9waG9lbml4LWNjbS50aGVwb2ludC5sd3cuY29tIiwibmJmIjoxNjgxNzEzMTYwLCJzdWIiOiI5ZTZlOGM1Ny02ODNlLTRjNTQtODkzMS00NDc0MDE1OWQ2ODUiLCJobHJwX2NjbSI6W3siciI6InMiLCJjcnMiOiJnU0VCUUJLRzk5SUIiLCJzZWMiOiJnU0VCUUJLRzk5SUJfc1NFQlFCS0dBMlIifV19.kKMRJHB4y0Tno_H-esNrWhe-RsUn8zHCmazkZhhKCgXyBFbLRWiD2zyGp5MOZCZbIW1WIlQg4CjosIPwQtw204mHb6iNohaZtznNKEaZ5_BbW3241Stf9E_xo2X9qBCl_zrYUpX1M4uR066aPvoD5d_hViNCAynUW7OXzK3nC4VgF9F6amwQSDrje6AeD8D8vLTw_kmFk9eGSkVvEWnd5ZssYCAzqyVdgadLGbFrWj2N3TOIPsEkgR3HoJ17Ipg_ZCAwBqrAiPG5WMqQsNbMexKeSeb2bMA5FQuasV9Qc3YK9aphsr4ER17HAAZ1F1GtO_gmaYBO8xKU11WX1_UDGx5Dt0cpeRM24oonRf4sGS-BIsWXCsG8fTyaYzfJajIv7xh-ibK5NYtp2fji4W1l9ErKyfMX8bh27B5TnSOPjKZQydo4bqRnpK6IeiSCKmhbi195Yzzzns9h3Zs0edCV70UnEnFPO23gHIM2tSjkk_HNUitc8rR3ErYXKQx_p3t4RyAYcP8dbqi0RdepDBYoyR8LtFpfF63PYKKSk9SD5ePpqcqyqfHDibuL_Onmn0q14sF5TkXmnFLrj15Bxx4dgJV6BwTwbc3n_I-y5unOB6nbSR2PwINbsueSx7hjmebMPzZJqUwCGeehUnvGvt5vMbMY1ofYglw1HxryhcCvgdo</con:value>
    </con:property>
    <con:property>
      <con:name>accessTime</con:name>
      <con:value>06:11 AM</con:value>
    </con:property>
    <con:property>
      <con:name>DueTime</con:name>
      <con:value>06:11 AM</con:value>
    </con:property>
    <con:property>
      <con:name>startAt</con:name>
      <con:value>2023-05-10T03:48:48.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>completedAt</con:name>
      <con:value>2023-05-10T03:51:51.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>sentAt</con:name>
      <con:value>2023-05-10T03:52:52.605Z</con:value>
    </con:property>
    <con:property>
      <con:name>Assertid</con:name>
      <con:value>2309</con:value>
    </con:property>
    <con:property>
      <con:name>Loop</con:name>
      <con:value>36</con:value>
    </con:property>
    <con:property>
      <con:name>PrepuExternalPrepuId</con:name>
      <con:value>["1501200653", "1501200654", "1501200655", "1501200656", "1501200657", "1501200658", "1501200659", "1501200660", "1501200661", "1501200662", "1501200663", "1501200664"]</con:value>
    </con:property>
    <con:property>
      <con:name>PrepuTargetMasteryLevel</con:name>
      <con:value>["8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8"]</con:value>
    </con:property>
    <con:property>
      <con:name>PrepuName</con:name>
      <con:value>["Acid-Base Balance", "Chapter 1: Professional Nursing Practice", "Behaviors / Addiction", "Chapter 2: Medical-Surgical Nursing", "Assessment", "Chapter 3: Health Education and Health Promotion", "Caring Interventions", "Chapter 4: Adult Health and Physical, Nutritional, and Cultural Assessment", "Cellular Regulation", "Chapter 5: Stress and Inflammatory Responses", "Clinical Decision Making / Clinical Judgment", "Chapter 6: Genetics and Genomics in Nursing"]</con:value>
    </con:property>
    <con:property>
      <con:name>PrePuCutOff</con:name>
      <con:value>11</con:value>
    </con:property>
    <con:property>
      <con:name>PrepuexternalAssetId</con:name>
      <con:value>["313", "15039", "317", "15040", "316", "15041", "319", "15042", "367", "15043", "321", "15044"]</con:value>
    </con:property>
    <con:property>
      <con:name>SubmittedAssignmentsCount</con:name>
      <con:value>48</con:value>
    </con:property>
    <con:property>
      <con:name>StatusCode</con:name>
      <con:value>200</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="6ce173f5-e51c-4b7f-9575-82621bb74596">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
